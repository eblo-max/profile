#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞
"""
import asyncio
import os
import sys
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'app'))

from app.services.ai_service import ai_service
from app.services.html_pdf_service import HTMLPDFService

async def test_updated_formatting():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∏ –∫—Ä–∞—Å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ - —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –ø—Ä–æ –∞–±—å—é–∑–µ—Ä–∞
    test_answers = [
        {
            "question": "–û–ø–∏—à–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –Ω–µ–¥–µ–ª–∏, –∫–æ–≥–¥–∞ –≤—ã –¥–∞–ª–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—É –∫—Ä–∏—Ç–∏—á–µ—Å–∫—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ –µ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏–∏ –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏—è—Ö. –ö–∞–∫–∏–º–∏ –±—ã–ª–∏ –µ–≥–æ –ø–µ—Ä–≤—ã–µ —Å–ª–æ–≤–∞ –∏ —Ä–µ–∞–∫—Ü–∏—è –≤ –ø–µ—Ä–≤—ã–µ 10 —Å–µ–∫—É–Ω–¥?",
            "answer": "–ö–æ–≥–¥–∞ —è —Å–∫–∞–∑–∞–ª–∞ –î–º–∏—Ç—Ä–∏—é, —á—Ç–æ –æ–Ω —Å–ª–∏—à–∫–æ–º –≥—Ä—É–±–æ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–µ—Ç —Å –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞–º–∏, –æ–Ω —Å—Ä–∞–∑—É –ø–æ–≤—ã—Å–∏–ª –≥–æ–ª–æ—Å: '–¢—ã —á—Ç–æ, —Å–æ–≤—Å–µ–º –¥—É—Ä–∞? –Ø –ø—Ä–æ—Å—Ç–æ —Ç—Ä–µ–±—É—é –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞!' –ü–æ—Ç–æ–º –¥–æ–±–∞–≤–∏–ª: '–¢—ã –≤—Å–µ–≥–¥–∞ –∑–∞—â–∏—â–∞–µ—à—å —á—É–∂–∏—Ö –ª—é–¥–µ–π –±–æ–ª—å—à–µ, —á–µ–º –º–µ–Ω—è'. –õ–∏—Ü–æ –ø–æ–∫—Ä–∞—Å–Ω–µ–ª–æ, –∫—É–ª–∞–∫–∏ —Å–∂–∞–ª–∏—Å—å."
        },
        {
            "question": "–í—Å–ø–æ–º–Ω–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –≤–∞—à –ø–∞—Ä—Ç–Ω–µ—Ä –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ —Ä–∞–∑–æ–∑–ª–∏–ª—Å—è. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –æ–Ω –¥–µ–ª–∞–ª –∏ –≥–æ–≤–æ—Ä–∏–ª –≤ –ø–µ—Ä–≤—ã–µ 5 –º–∏–Ω—É—Ç?",
            "answer": "–î–º–∏—Ç—Ä–∏–π –∫—Ä–∏—á–∞–ª: '–¢—ã —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –º–µ–Ω—è –±–µ—Å–∏—à—å! –¢—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ —è –Ω–µ–Ω–∞–≤–∏–∂—É, –∫–æ–≥–¥–∞ —Ç—ã –æ–ø–∞–∑–¥—ã–≤–∞–µ—à—å!' –®–≤—ã—Ä–Ω—É–ª —Ç–µ–ª–µ—Ñ–æ–Ω –æ–± —Å—Ç–µ–Ω—É, –ø–∏–Ω–∞–ª —Å—Ç—É–ª. –ü–æ—Ç–æ–º —Å—Ö–≤–∞—Ç–∏–ª –º–µ–Ω—è –∑–∞ –ø–ª–µ—á–∏ –∏ —Ç—Ä—è—Å: '–°–º–æ—Ç—Ä–∏ –Ω–∞ –º–µ–Ω—è, –∫–æ–≥–¥–∞ —è —Å —Ç–æ–±–æ–π —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—é!' –ì–ª–∞–∑–∞ –±—ã–ª–∏ –∫—Ä–∞—Å–Ω—ã–µ –æ—Ç –∑–ª–æ—Å—Ç–∏."
        },
        {
            "question": "–û–ø–∏—à–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é, –∫–æ–≥–¥–∞ –≤—ã –Ω–∞–ø–æ–º–Ω–∏–ª–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—É –æ –µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–∏ –∏–ª–∏ —Å–ª–æ–≤–∞—Ö, –∞ –æ–Ω –æ—Ç—Ä–∏—Ü–∞–ª, —á—Ç–æ —ç—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–æ. –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω—ã–π –¥–∏–∞–ª–æ–≥.",
            "answer": "–Ø: '–î–º–∏—Ç—Ä–∏–π, –≤—á–µ—Ä–∞ —Ç—ã —Å–∫–∞–∑–∞–ª, —á—Ç–æ —è —Ç–æ–ª—Å—Ç–∞—è –∫–æ—Ä–æ–≤–∞'. –û–Ω: '–Ø —Ç–∞–∫–æ–≥–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –≥–æ–≤–æ—Ä–∏–ª! –£ —Ç–µ–±—è –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–∞–º—è—Ç—å—é'. –Ø: '–ù–æ —Ç—ã –∂–µ —Å–∫–∞–∑–∞–ª —ç—Ç–æ –ø—Ä–∏ –ê–Ω–µ'. –û–Ω: '–ê–Ω—è –Ω–∏—á–µ–≥–æ –Ω–µ —Å–ª—ã—à–∞–ª–∞, —Ç—ã –≤—Å–µ –≤—ã–¥—É–º—ã–≤–∞–µ—à—å. –ú–æ–∂–µ—Ç —Ç–µ–±–µ –∫ –≤—Ä–∞—á—É —Å—Ö–æ–¥–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–æ–ª–æ–≤—É?'"
        }
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∞–ª–∏–∑ –æ—Ç AI
        result = await ai_service.profile_partner_free_form(
            text_answers=test_answers,
            user_id=12345,
            partner_name="–î–º–∏—Ç—Ä–∏–π",
            partner_description="–ú–æ–π –ø–∞—Ä–µ–Ω—å, —Å –∫–æ—Ç–æ—Ä—ã–º –≤—Å—Ç—Ä–µ—á–∞—é—Å—å 2 –≥–æ–¥–∞",
            partner_basic_info="–î–º–∏—Ç—Ä–∏–π, 28 –ª–µ—Ç, —Ä–∞–±–æ—Ç–∞–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º"
        )
        
        print("‚úÖ AI –∞–Ω–∞–ª–∏–∑ –ø–æ–ª—É—á–µ–Ω")
        print("üìù –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ HTML —Å—Ç–∏–ª–µ–π –≤ –∞–Ω–∞–ª–∏–∑–µ
        analysis_text = result.get('psychological_profile', '')
        
        if 'analysis-main-title' in analysis_text:
            print("‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ–º –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚ùå –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ–º –ù–ï –Ω–∞–π–¥–µ–Ω")
            
        if 'analysis-section-header' in analysis_text:
            print("‚úÖ –ö—Ä–∞—Å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ä–∞–∑–¥–µ–ª–æ–≤ –Ω–∞–π–¥–µ–Ω—ã")
        else:
            print("‚ùå –ö—Ä–∞—Å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ä–∞–∑–¥–µ–ª–æ–≤ –ù–ï –Ω–∞–π–¥–µ–Ω—ã")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∞–Ω–∞–ª–∏–∑–∞
        print("\nüìÑ –§—Ä–∞–≥–º–µ–Ω—Ç –∞–Ω–∞–ª–∏–∑–∞:")
        print("=" * 60)
        print(analysis_text[:500] + "..." if len(analysis_text) > 500 else analysis_text)
        print("=" * 60)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        pdf_data = {
            'partner_name': '–î–º–∏—Ç—Ä–∏–π',
            'date': datetime.now().strftime('%d.%m.%Y'),
            'report_id': 'TEST-001',
            'risk_score': result.get('risk_score', 85),
            'personality_type': result.get('personality_type', '–ú–∞–Ω–∏–ø—É–ª—è—Ç–∏–≤–Ω—ã–π –Ω–∞—Ä—Ü–∏—Å—Å'),
            'red_flags': result.get('red_flags', []),
            'psychological_profile': analysis_text
        }
        
        html_pdf_service = HTMLPDFService()
        pdf_content = await html_pdf_service.generate_partner_report_html(
            pdf_data, user_id=12345, partner_name="–î–º–∏—Ç—Ä–∏–π"
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º PDF
        with open('test_updated_formatting.pdf', 'wb') as f:
            f.write(pdf_content)
        
        print("‚úÖ PDF —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: test_updated_formatting.pdf")
        print("üéØ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ PDF –Ω–∞:")
        print("   - –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Å–Ω–æ–≤–Ω–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫")
        print("   - –ö—Ä–∞—Å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ä–∞–∑–¥–µ–ª–æ–≤ —Å —Ç–µ–Ω—å—é")
        print("   - –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ª–∏—à–Ω–∏—Ö –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_updated_formatting()) 