"""add missing subscription columns to users

Revision ID: 7cbb7ea81e38
Revises: d08a0a3f6f38
Create Date: 2025-07-04 20:52:51.517184

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "7cbb7ea81e38"
down_revision: Union[str, None] = "d08a0a3f6f38"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add subscription and usage tracking columns
    op.add_column("users", sa.Column("subscription_type", sa.String(length=20), nullable=False, server_default="FREE"))
    op.add_column("users", sa.Column("analyses_count", sa.Integer(), nullable=True, server_default="0"))
    op.add_column("users", sa.Column("analyses_limit", sa.Integer(), nullable=True, server_default="3"))
    op.add_column("users", sa.Column("total_analyses", sa.Integer(), nullable=True, server_default="0"))
    
    # Add timestamp columns
    op.add_column("users", sa.Column("registration_date", sa.DateTime(timezone=True), nullable=True, server_default=sa.text("NOW()")))
    op.add_column("users", sa.Column("last_activity", sa.DateTime(timezone=True), nullable=True, server_default=sa.text("NOW()")))
    op.add_column("users", sa.Column("last_analysis_date", sa.DateTime(timezone=True), nullable=True))
    
    # Add status columns
    op.add_column("users", sa.Column("is_active", sa.Boolean(), nullable=True, server_default="true"))
    op.add_column("users", sa.Column("is_blocked", sa.Boolean(), nullable=True, server_default="false"))
    op.add_column("users", sa.Column("is_admin", sa.Boolean(), nullable=True, server_default="false"))
    op.add_column("users", sa.Column("is_new_user", sa.Boolean(), nullable=True, server_default="true"))
    
    # Add settings columns
    op.add_column("users", sa.Column("notifications_enabled", sa.Boolean(), nullable=True, server_default="true"))
    op.add_column("users", sa.Column("daily_tips_enabled", sa.Boolean(), nullable=True, server_default="true"))
    op.add_column("users", sa.Column("analysis_reminders_enabled", sa.Boolean(), nullable=True, server_default="true"))
    
    # Add additional data columns
    op.add_column("users", sa.Column("referral_code", sa.String(length=50), nullable=True))
    op.add_column("users", sa.Column("referred_by", sa.Integer(), nullable=True))
    op.add_column("users", sa.Column("notes", sa.Text(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("users", "notes")
    op.drop_column("users", "referred_by")
    op.drop_column("users", "referral_code")
    op.drop_column("users", "analysis_reminders_enabled")
    op.drop_column("users", "daily_tips_enabled")
    op.drop_column("users", "notifications_enabled")
    op.drop_column("users", "is_new_user")
    op.drop_column("users", "is_admin")
    op.drop_column("users", "is_blocked")
    op.drop_column("users", "is_active")
    op.drop_column("users", "last_analysis_date")
    op.drop_column("users", "last_activity")
    op.drop_column("users", "registration_date")
    op.drop_column("users", "total_analyses")
    op.drop_column("users", "analyses_limit")
    op.drop_column("users", "analyses_count")
    op.drop_column("users", "subscription_type")
    # ### end Alembic commands ###
