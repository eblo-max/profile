"""initial_clean_migration

Revision ID: cdf1337f906a
Revises: 
Create Date: 2025-07-04 13:26:05.132243

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "cdf1337f906a"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "daily_content",
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column(
            "content_type",
            sa.Enum("TIP", "CASE_STUDY", "EXERCISE", "QUOTE", name="contenttype"),
            nullable=False,
        ),
        sa.Column("author", sa.String(length=255), nullable=True),
        sa.Column("source", sa.String(length=255), nullable=True),
        sa.Column("tags", sa.String(length=500), nullable=True),
        sa.Column("scheduled_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("published_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_published", sa.Boolean(), nullable=True),
        sa.Column("is_featured", sa.Boolean(), nullable=True),
        sa.Column("is_premium", sa.Boolean(), nullable=True),
        sa.Column("views_count", sa.Integer(), nullable=True),
        sa.Column("likes_count", sa.Integer(), nullable=True),
        sa.Column("shares_count", sa.Integer(), nullable=True),
        sa.Column("image_url", sa.String(length=500), nullable=True),
        sa.Column("external_url", sa.String(length=500), nullable=True),
        sa.Column("reading_time", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_daily_content_id"), "daily_content", ["id"], unique=False)
    op.create_table(
        "users",
        sa.Column("telegram_id", sa.BigInteger(), nullable=False),
        sa.Column("username", sa.String(length=255), nullable=True),
        sa.Column("first_name", sa.String(length=255), nullable=True),
        sa.Column("last_name", sa.String(length=255), nullable=True),
        sa.Column("language_code", sa.String(length=10), nullable=True),
        sa.Column("personality_type", sa.String(length=100), nullable=True),
        sa.Column("subscription_type", sa.String(length=20), nullable=False),
        sa.Column("analyses_count", sa.Integer(), nullable=True),
        sa.Column("analyses_limit", sa.Integer(), nullable=True),
        sa.Column("total_analyses", sa.Integer(), nullable=True),
        sa.Column(
            "registration_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "last_activity",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("last_analysis_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_blocked", sa.Boolean(), nullable=True),
        sa.Column("is_admin", sa.Boolean(), nullable=True),
        sa.Column("is_new_user", sa.Boolean(), nullable=True),
        sa.Column("notifications_enabled", sa.Boolean(), nullable=True),
        sa.Column("daily_tips_enabled", sa.Boolean(), nullable=True),
        sa.Column("analysis_reminders_enabled", sa.Boolean(), nullable=True),
        sa.Column("referral_code", sa.String(length=50), nullable=True),
        sa.Column("referred_by", sa.Integer(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("referral_code"),
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(op.f("ix_users_telegram_id"), "users", ["telegram_id"], unique=True)
    op.create_table(
        "compatibility_tests",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("user_name", sa.String(length=255), nullable=True),
        sa.Column("partner_name", sa.String(length=255), nullable=True),
        sa.Column("user_answers", sa.JSON(), nullable=False),
        sa.Column("partner_answers", sa.JSON(), nullable=False),
        sa.Column("overall_compatibility", sa.Float(), nullable=False),
        sa.Column("communication_compatibility", sa.Float(), nullable=True),
        sa.Column("values_compatibility", sa.Float(), nullable=True),
        sa.Column("lifestyle_compatibility", sa.Float(), nullable=True),
        sa.Column("emotional_compatibility", sa.Float(), nullable=True),
        sa.Column("strengths", sa.JSON(), nullable=True),
        sa.Column("challenges", sa.JSON(), nullable=True),
        sa.Column("recommendations", sa.JSON(), nullable=True),
        sa.Column("compatibility_analysis", sa.Text(), nullable=True),
        sa.Column("relationship_advice", sa.Text(), nullable=True),
        sa.Column("growth_areas", sa.Text(), nullable=True),
        sa.Column("similarity_score", sa.Float(), nullable=True),
        sa.Column("complement_score", sa.Float(), nullable=True),
        sa.Column("conflict_potential", sa.Float(), nullable=True),
        sa.Column("communication_style_match", sa.Float(), nullable=True),
        sa.Column("conflict_resolution_match", sa.Float(), nullable=True),
        sa.Column("life_goals_alignment", sa.Float(), nullable=True),
        sa.Column("emotional_needs_match", sa.Float(), nullable=True),
        sa.Column("confidence_score", sa.Float(), nullable=True),
        sa.Column("processing_time", sa.Float(), nullable=True),
        sa.Column("ai_model_used", sa.String(length=50), nullable=True),
        sa.Column("is_completed", sa.Boolean(), nullable=True),
        sa.Column("is_shared", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_compatibility_tests_id"), "compatibility_tests", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_compatibility_tests_user_id"),
        "compatibility_tests",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "partner_profiles",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("partner_name", sa.String(length=255), nullable=True),
        sa.Column("partner_description", sa.Text(), nullable=True),
        sa.Column("questionnaire_answers", sa.JSON(), nullable=False),
        sa.Column("personality_type", sa.String(length=100), nullable=True),
        sa.Column("manipulation_risk", sa.Float(), nullable=False),
        sa.Column("red_flags", sa.JSON(), nullable=True),
        sa.Column("positive_traits", sa.JSON(), nullable=True),
        sa.Column("warning_signs", sa.JSON(), nullable=True),
        sa.Column("psychological_profile", sa.Text(), nullable=True),
        sa.Column("relationship_advice", sa.Text(), nullable=True),
        sa.Column("communication_tips", sa.Text(), nullable=True),
        sa.Column(
            "urgency_level",
            sa.Enum("LOW", "MEDIUM", "HIGH", "CRITICAL", name="urgencylevel"),
            nullable=False,
        ),
        sa.Column("overall_compatibility", sa.Float(), nullable=True),
        sa.Column("trust_indicators", sa.JSON(), nullable=True),
        sa.Column("confidence_score", sa.Float(), nullable=True),
        sa.Column("processing_time", sa.Float(), nullable=True),
        sa.Column("ai_model_used", sa.String(length=50), nullable=True),
        sa.Column("is_completed", sa.Boolean(), nullable=True),
        sa.Column("is_shared", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_partner_profiles_id"), "partner_profiles", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_partner_profiles_user_id"),
        "partner_profiles",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "subscriptions",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "subscription_type",
            sa.Enum("FREE", "PREMIUM", "VIP", name="subscriptiontype"),
            nullable=False,
        ),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("currency", sa.String(length=3), nullable=True),
        sa.Column(
            "start_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("end_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("duration_days", sa.Integer(), nullable=False),
        sa.Column("payment_id", sa.String(length=255), nullable=True),
        sa.Column("payment_method", sa.String(length=50), nullable=True),
        sa.Column(
            "payment_status",
            sa.Enum("PENDING", "COMPLETED", "FAILED", "REFUNDED", name="paymentstatus"),
            nullable=True,
        ),
        sa.Column("payment_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_cancelled", sa.Boolean(), nullable=True),
        sa.Column("is_refunded", sa.Boolean(), nullable=True),
        sa.Column("auto_renewal", sa.Boolean(), nullable=True),
        sa.Column("purchase_source", sa.String(length=50), nullable=True),
        sa.Column("referral_code", sa.String(length=50), nullable=True),
        sa.Column("promo_code", sa.String(length=50), nullable=True),
        sa.Column("discount_amount", sa.Float(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("cancellation_reason", sa.String(length=255), nullable=True),
        sa.Column("refund_reason", sa.String(length=255), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_subscriptions_id"), "subscriptions", ["id"], unique=False)
    op.create_index(
        op.f("ix_subscriptions_user_id"), "subscriptions", ["user_id"], unique=False
    )
    op.create_table(
        "text_analyses",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "analysis_type",
            sa.Enum(
                "TEXT_ANALYSIS", "VOICE_ANALYSIS", "IMAGE_ANALYSIS", name="analysistype"
            ),
            nullable=True,
        ),
        sa.Column("original_text", sa.Text(), nullable=False),
        sa.Column("text_hash", sa.String(length=64), nullable=False),
        sa.Column("toxicity_score", sa.Float(), nullable=False),
        sa.Column(
            "urgency_level",
            sa.Enum("LOW", "MEDIUM", "HIGH", "CRITICAL", name="urgencylevel"),
            nullable=False,
        ),
        sa.Column("red_flags", sa.JSON(), nullable=True),
        sa.Column("patterns_detected", sa.JSON(), nullable=True),
        sa.Column("analysis_text", sa.Text(), nullable=True),
        sa.Column("recommendation", sa.Text(), nullable=True),
        sa.Column("confidence_score", sa.Float(), nullable=True),
        sa.Column("processing_time", sa.Float(), nullable=True),
        sa.Column("ai_model_used", sa.String(length=50), nullable=True),
        sa.Column("keywords", sa.JSON(), nullable=True),
        sa.Column("sentiment_score", sa.Float(), nullable=True),
        sa.Column("reading_time", sa.Integer(), nullable=True),
        sa.Column("is_processed", sa.Boolean(), nullable=True),
        sa.Column("is_shared", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_text_analyses_id"), "text_analyses", ["id"], unique=False)
    op.create_index(
        op.f("ix_text_analyses_text_hash"), "text_analyses", ["text_hash"], unique=False
    )
    op.create_index(
        op.f("ix_text_analyses_user_id"), "text_analyses", ["user_id"], unique=False
    )
    op.create_table(
        "user_achievements",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("achievement_id", sa.String(length=100), nullable=False),
        sa.Column("achievement_name", sa.String(length=255), nullable=False),
        sa.Column("achievement_description", sa.Text(), nullable=True),
        sa.Column("current_progress", sa.Integer(), nullable=True),
        sa.Column("target_progress", sa.Integer(), nullable=False),
        sa.Column("is_completed", sa.Boolean(), nullable=True),
        sa.Column("completion_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("category", sa.String(length=100), nullable=True),
        sa.Column("difficulty", sa.String(length=50), nullable=True),
        sa.Column("points", sa.Integer(), nullable=True),
        sa.Column("badge_url", sa.String(length=500), nullable=True),
        sa.Column("unlock_criteria", sa.JSON(), nullable=True),
        sa.Column("rewards", sa.JSON(), nullable=True),
        sa.Column("is_hidden", sa.Boolean(), nullable=True),
        sa.Column("is_special", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_user_achievements_achievement_id"),
        "user_achievements",
        ["achievement_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_achievements_id"), "user_achievements", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_user_achievements_user_id"),
        "user_achievements",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "user_activities",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "activity_type",
            sa.Enum(
                "REGISTRATION",
                "ANALYSIS_COMPLETED",
                "PROFILE_CREATED",
                "COMPATIBILITY_TEST",
                "SUBSCRIPTION_PURCHASED",
                "DAILY_CONTENT_VIEWED",
                "ACHIEVEMENT_EARNED",
                name="activitytype",
            ),
            nullable=False,
        ),
        sa.Column("activity_name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("extra_data", sa.JSON(), nullable=True),
        sa.Column("session_id", sa.String(length=255), nullable=True),
        sa.Column("ip_address", sa.String(length=45), nullable=True),
        sa.Column("user_agent", sa.String(length=500), nullable=True),
        sa.Column("duration", sa.Float(), nullable=True),
        sa.Column("success", sa.Boolean(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("platform", sa.String(length=50), nullable=True),
        sa.Column("feature_used", sa.String(length=100), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_user_activities_id"), "user_activities", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_user_activities_user_id"), "user_activities", ["user_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_user_activities_user_id"), table_name="user_activities")
    op.drop_index(op.f("ix_user_activities_id"), table_name="user_activities")
    op.drop_table("user_activities")
    op.drop_index(op.f("ix_user_achievements_user_id"), table_name="user_achievements")
    op.drop_index(op.f("ix_user_achievements_id"), table_name="user_achievements")
    op.drop_index(
        op.f("ix_user_achievements_achievement_id"), table_name="user_achievements"
    )
    op.drop_table("user_achievements")
    op.drop_index(op.f("ix_text_analyses_user_id"), table_name="text_analyses")
    op.drop_index(op.f("ix_text_analyses_text_hash"), table_name="text_analyses")
    op.drop_index(op.f("ix_text_analyses_id"), table_name="text_analyses")
    op.drop_table("text_analyses")
    op.drop_index(op.f("ix_subscriptions_user_id"), table_name="subscriptions")
    op.drop_index(op.f("ix_subscriptions_id"), table_name="subscriptions")
    op.drop_table("subscriptions")
    op.drop_index(op.f("ix_partner_profiles_user_id"), table_name="partner_profiles")
    op.drop_index(op.f("ix_partner_profiles_id"), table_name="partner_profiles")
    op.drop_table("partner_profiles")
    op.drop_index(
        op.f("ix_compatibility_tests_user_id"), table_name="compatibility_tests"
    )
    op.drop_index(op.f("ix_compatibility_tests_id"), table_name="compatibility_tests")
    op.drop_table("compatibility_tests")
    op.drop_index(op.f("ix_users_telegram_id"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_daily_content_id"), table_name="daily_content")
    op.drop_table("daily_content")
    # ### end Alembic commands ###
