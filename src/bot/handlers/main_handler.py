"""
–û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
"""
from telegram import Update
from telegram.ext import (
    Application, CommandHandler, MessageHandler, 
    CallbackQueryHandler, ConversationHandler, filters
)
import structlog

from src.bot.states.analysis_states import AnalysisStates

logger = structlog.get_logger()


async def start_command(update: Update, context) -> str:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    
    welcome_text = f"""
üß† **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Psychology AI Bot!**

–ü—Ä–∏–≤–µ—Ç, {user.first_name}! 

–Ø –ø–æ–º–æ–≥—É —Å–æ–∑–¥–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ:
‚Ä¢ üìù –¢–µ–∫—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ üì∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
‚Ä¢ üåê –°–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π

**–ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚úÖ –ê–Ω–∞–ª–∏–∑ –ª–∏—á–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ 8+ AI —Å–µ—Ä–≤–∏—Å–æ–≤
‚úÖ –ù–∞—É—á–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
‚úÖ –ü–æ–ª–Ω–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
‚úÖ –ö—Ä–æ—Å—Å-–≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö

–ù–∞–∂–º–∏ /menu —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑!
    """
    
    await update.message.reply_text(
        welcome_text,
        parse_mode='Markdown'
    )
    
    logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞", user_id=user.id)
    return AnalysisStates.MENU


async def menu_command(update: Update, context) -> str:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu"""
    menu_text = """
üéØ **–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é**

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:

1Ô∏è‚É£ /analyze - –ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
2Ô∏è‚É£ /history - –ò—Å—Ç–æ—Ä–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤
3Ô∏è‚É£ /settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏
4Ô∏è‚É£ /help - –ü–æ–º–æ—â—å

–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?
    """
    
    await update.message.reply_text(
        menu_text,
        parse_mode='Markdown'
    )
    
    return AnalysisStates.MENU


async def analyze_command(update: Update, context) -> str:
    """–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑"""
    analyze_text = """
üîç **–ù–æ–≤—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑**

–î–ª—è —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –º–Ω–µ –Ω—É–∂–Ω—ã –¥–∞–Ω–Ω—ã–µ:

üìù **–¢–µ–∫—Å—Ç** - —Å–æ–æ–±—â–µ–Ω–∏—è, –ø–æ—Å—Ç—ã, –ø–∏—Å—å–º–∞
üì∏ **–§–æ—Ç–æ** - –ø–æ—Ä—Ç—Ä–µ—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —ç–º–æ—Ü–∏–π
üåê **–°–æ—Ü—Å–µ—Ç–∏** - –ø—Ä–æ—Ñ–∏–ª–∏, –ø—É–±–ª–∏–∫–∞—Ü–∏–∏

–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∞–Ω–∞–ª–∏–∑–∞.

üí° *–ß–µ–º –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö - —Ç–µ–º —Ç–æ—á–Ω–µ–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!*
    """
    
    await update.message.reply_text(
        analyze_text,
        parse_mode='Markdown'
    )
    
    return AnalysisStates.COLLECT_TEXT


async def text_handler(update: Update, context) -> str:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    text = update.message.text
    user = update.effective_user
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
    if not context.user_data.get('collected_data'):
        context.user_data['collected_data'] = {}
    
    context.user_data['collected_data']['text'] = text
    
    await update.message.reply_text(
        f"‚úÖ –ü–æ–ª—É—á–µ–Ω —Ç–µ–∫—Å—Ç ({len(text)} —Å–∏–º–≤–æ–ª–æ–≤)\n\n"
        f"–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –Ω–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑?\n\n"
        f"/start_analysis - –ù–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑\n"
        f"/add_image - –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ\n"
        f"/menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    )
    
    logger.info("–ü–æ–ª—É—á–µ–Ω —Ç–µ–∫—Å—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", 
                user_id=user.id, text_length=len(text))
    
    return AnalysisStates.CONFIRM_DATA


async def start_analysis_command(update: Update, context) -> str:
    """–ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞"""
    collected_data = context.user_data.get('collected_data', {})
    
    if not collected_data:
        await update.message.reply_text(
            "‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞!\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ."
        )
        return AnalysisStates.COLLECT_TEXT
    
    # –ü–æ–∫–∞–∑ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∞–Ω–∞–ª–∏–∑–∞
    processing_text = """
üîÑ **–ó–∞–ø—É—Å–∫–∞—é –∞–Ω–∞–ª–∏–∑...**

üìä –≠—Ç–∞–ø—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:
‚ñ° IBM Watson - –∞–Ω–∞–ª–∏–∑ –ª–∏—á–Ω–æ—Å—Ç–∏
‚ñ° Azure Cognitive - —ç–º–æ—Ü–∏–∏
‚ñ° Google Cloud - —Å—É—â–Ω–æ—Å—Ç–∏
‚ñ° AWS Rekognition - –ª–∏—Ü–∞
‚ñ° Claude - —Å–∏–Ω—Ç–µ–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

‚è≥ –≠—Ç–æ –∑–∞–π–º–µ—Ç 1-2 –º–∏–Ω—É—Ç—ã...
    """
    
    await update.message.reply_text(
        processing_text,
        parse_mode='Markdown'
    )
    
    # TODO: –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ –¥–≤–∏–∂–∫–∞ –∞–Ω–∞–ª–∏–∑–∞
    
    # –ü–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞
    await update.message.reply_text(
        "üöß **–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ**\n\n"
        "–°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–∞ –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Å–µ—Ö AI —Å–µ—Ä–≤–∏—Å–æ–≤.\n\n"
        "/menu - –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"
    )
    
    return AnalysisStates.SHOW_RESULTS


async def help_command(update: Update, context) -> str:
    """–ü–æ–º–æ—â—å"""
    help_text = """
üìö **–ü–æ–º–æ—â—å - Psychology AI Bot**

**–ö–æ–º–∞–Ω–¥—ã:**
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é  
/analyze - –ù–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
/history - –ò—Å—Ç–æ—Ä–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

**–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–Ω–∞–ª–∏–∑:**
1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ (—Ç–µ–∫—Å—Ç/—Ñ–æ—Ç–æ)
2. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞
3. –ü–æ–ª—É—á–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç

**–¢–∏–ø—ã –∞–Ω–∞–ª–∏–∑–∞:**
‚Ä¢ –õ–∏—á–Ω–æ—Å—Ç–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å (Big5)
‚Ä¢ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
‚Ä¢ –ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
‚Ä¢ –ö–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏

**–ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö:**
‚Ä¢ IBM Watson Personality Insights
‚Ä¢ Azure Cognitive Services
‚Ä¢ Google Cloud Natural Language
‚Ä¢ AWS Rekognition
‚Ä¢ Crystal API (DISC)
‚Ä¢ Receptiviti API

–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã? –ù–∞–ø–∏—à–∏—Ç–µ /start
    """
    
    await update.message.reply_text(
        help_text,
        parse_mode='Markdown'
    )
    
    return AnalysisStates.MENU


async def cancel_handler(update: Update, context) -> int:
    """–û—Ç–º–µ–Ω–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞"""
    await update.message.reply_text(
        "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã."
    )
    
    return ConversationHandler.END


def setup_handlers(application: Application):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    
    # –°–æ–∑–¥–∞–Ω–∏–µ ConversationHandler
    conv_handler = ConversationHandler(
        entry_points=[
            CommandHandler("start", start_command),
            CommandHandler("menu", menu_command),
        ],
        states={
            AnalysisStates.MENU: [
                CommandHandler("analyze", analyze_command),
                CommandHandler("history", help_command),  # –ó–∞–≥–ª—É—à–∫–∞
                CommandHandler("settings", help_command),  # –ó–∞–≥–ª—É—à–∫–∞
                CommandHandler("help", help_command),
            ],
            AnalysisStates.COLLECT_TEXT: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, text_handler),
                CommandHandler("add_image", help_command),  # –ó–∞–≥–ª—É—à–∫–∞
                CommandHandler("menu", menu_command),
            ],
            AnalysisStates.CONFIRM_DATA: [
                CommandHandler("start_analysis", start_analysis_command),
                CommandHandler("add_image", help_command),  # –ó–∞–≥–ª—É—à–∫–∞
                CommandHandler("menu", menu_command),
            ],
            AnalysisStates.SHOW_RESULTS: [
                CommandHandler("menu", menu_command),
                CommandHandler("analyze", analyze_command),
            ],
        },
        fallbacks=[
            CommandHandler("cancel", cancel_handler),
            CommandHandler("menu", menu_command),
        ],
        per_user=True,
        per_chat=True,
    )
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    application.add_handler(conv_handler)
    application.add_handler(CommandHandler("help", help_command))
    
    logger.info("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –±–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã") 