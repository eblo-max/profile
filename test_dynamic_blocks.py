#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –±–ª–æ–∫–æ–≤ PDF —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–µ–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

import asyncio
import sys
import os
import json
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.services.ai_service import AIService
from app.services.html_pdf_service import HTMLPDFService

async def test_dynamic_blocks():
    """–¢–µ—Å—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –±–ª–æ–∫–æ–≤ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏"""
    
    print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –±–ª–æ–∫–∏ PDF...")
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    test_answers = [
        {
            "question": "–û–ø–∏—à–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –Ω–µ–¥–µ–ª–∏, –∫–æ–≥–¥–∞ –≤—ã –¥–∞–ª–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—É –∫—Ä–∏—Ç–∏—á–µ—Å–∫—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ –µ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏–∏ –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏—è—Ö. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã —Å–∫–∞–∑–∞–ª–∏ –∏ –∫–∞–∫ –æ–Ω –æ—Ç—Ä–µ–∞–≥–∏—Ä–æ–≤–∞–ª –≤ –ø–µ—Ä–≤—ã–µ 10 —Å–µ–∫—É–Ω–¥?",
            "answer": "–Ø —Å–∫–∞–∑–∞–ª–∞ –µ–º—É, —á—Ç–æ –º–Ω–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –∫–∞–∫ –æ–Ω –∫—Ä–∏—á–∏—Ç –Ω–∞ –¥–µ—Ç–µ–π. –í –ø–µ—Ä–≤—ã–µ —Å–µ–∫—É–Ω–¥—ã –æ–Ω –ø–æ–∫—Ä–∞—Å–Ω–µ–ª, —Å–∂–∞–ª –∫—É–ª–∞–∫–∏ –∏ —Å–∫–∞–∑–∞–ª: '–¢—ã –≤–æ–æ–±—â–µ –ø–æ–Ω–∏–º–∞–µ—à—å, –∫–∞–∫ —Ç—è–∂–µ–ª–æ –º–Ω–µ –Ω–∞ —Ä–∞–±–æ—Ç–µ? –ê —Ç—ã –µ—â–µ –∏ –¥–æ–º–∞ –º–µ–Ω—è –∫—Ä–∏—Ç–∏–∫—É–µ—à—å!' –ü–æ—Ç–æ–º –Ω–∞—á–∞–ª –ø–µ—Ä–µ—á–∏—Å–ª—è—Ç—å –≤—Å–µ –º–æ–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏.",
            "block": "narcissism"
        },
        {
            "question": "–í—Å–ø–æ–º–Ω–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –≤—ã —Å–∫–∞–∑–∞–ª–∏ '–Ω–µ—Ç' –Ω–∞ –ø—Ä–æ—Å—å–±—É –ø–∞—Ä—Ç–Ω–µ—Ä–∞. –û–ø–∏—à–∏—Ç–µ –µ–≥–æ —Ä–µ–∞–∫—Ü–∏—é –≤ —Å–ª–µ–¥—É—é—â–∏–µ 10 –º–∏–Ω—É—Ç. –ö–∞–∫–∏–µ –∏–º–µ–Ω–Ω–æ —Å–ª–æ–≤–∞ –æ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª?",
            "answer": "–Ø –æ—Ç–∫–∞–∑–∞–ª–∞—Å—å –∏–¥—Ç–∏ –∫ –µ–≥–æ –¥—Ä—É–∑—å—è–º, —Å–∫–∞–∑–∞–≤ —á—Ç–æ —É—Å—Ç–∞–ª–∞. –û–Ω —Å–Ω–∞—á–∞–ª–∞ –º–æ–ª—á–∞–ª, –ø–æ—Ç–æ–º —Å–∫–∞–∑–∞–ª: '–¢—ã –≤—Å–µ–≥–¥–∞ –Ω–∞—Ö–æ–¥–∏—à—å –æ—Ç–≥–æ–≤–æ—Ä–∫–∏. –ú–æ–∏ –¥—Ä—É–∑—å—è —É–∂–µ –¥—É–º–∞—é—Ç, —á—Ç–æ —Ç—ã –º–µ–Ω—è –Ω–µ –ª—é–±–∏—à—å.' –ü–æ—Ç–æ–º –≤–µ—Å—å –≤–µ—á–µ—Ä –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ –º–æ–ª—á–∞–ª –∏ —Ö–ª–æ–ø–∞–ª –¥–≤–µ—Ä—è–º–∏.",
            "block": "control"
        },
        {
            "question": "–í—Å–ø–æ–º–Ω–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é, –∫–æ–≥–¥–∞ –≤—ã –Ω–∞–ø–æ–º–Ω–∏–ª–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—É –æ –µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–∏ –∏–ª–∏ —Å–ª–æ–≤–∞—Ö, –∞ –æ–Ω –æ—Ç—Ä–∏—Ü–∞–ª, —á—Ç–æ —ç—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–æ. –û–ø–∏—à–∏—Ç–µ, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –æ–Ω —Å–∫–∞–∑–∞–ª –∏ –∫–∞–∫ –≤—ã —Å–µ–±—è –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∏.",
            "answer": "–Ø –Ω–∞–ø–æ–º–Ω–∏–ª–∞ –µ–º—É, —á—Ç–æ –æ–Ω –≤—á–µ—Ä–∞ –æ–±–µ—â–∞–ª –∑–∞–±—Ä–∞—Ç—å —Ä–µ–±–µ–Ω–∫–∞ –∏–∑ —Å–∞–¥–∏–∫–∞. –û–Ω —Å–∫–∞–∑–∞–ª: '–Ø —Ç–∞–∫–æ–≥–æ –Ω–µ –≥–æ–≤–æ—Ä–∏–ª, —Ç—ã –≤—Å–µ –≤—ã–¥—É–º—ã–≤–∞–µ—à—å. –£ —Ç–µ–±—è –ø–ª–æ—Ö–∞—è –ø–∞–º—è—Ç—å.' –Ø –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∞ —Å–µ–±—è —Å—É–º–∞—Å—à–µ–¥—à–µ–π, –Ω–∞—á–∞–ª–∞ —Å–æ–º–Ω–µ–≤–∞—Ç—å—Å—è –≤ —Å–µ–±–µ.",
            "block": "gaslighting"
        },
        {
            "question": "–û–ø–∏—à–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ –≤–∞—à –ø–∞—Ä—Ç–Ω–µ—Ä –æ—á–µ–Ω—å —Ä–∞–∑–æ–∑–ª–∏–ª—Å—è. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –æ–Ω –¥–µ–ª–∞–ª –∏ –≥–æ–≤–æ—Ä–∏–ª –≤ –ø–µ—Ä–≤—ã–µ 5 –º–∏–Ω—É—Ç? –ü—Ä–∏–≤–µ–¥–∏—Ç–µ –µ–≥–æ —Ç–æ—á–Ω—ã–µ —Å–ª–æ–≤–∞.",
            "answer": "–û–Ω –∑–ª–∏–ª—Å—è –∏–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ —É–∂–∏–Ω –±—ã–ª –Ω–µ –≥–æ—Ç–æ–≤. –ö—Ä–∏—á–∞–ª: '–¢—ã –≤–æ–æ–±—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ —É–º–µ–µ—à—å! –Ø –≤–µ—Å—å –¥–µ–Ω—å —Ä–∞–±–æ—Ç–∞—é, –∞ —Ç—ã –¥–∞–∂–µ –ø–æ–µ—Å—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ –Ω–µ –º–æ–∂–µ—à—å –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å!' –®–≤—ã—Ä–Ω—É–ª —Ç–∞—Ä–µ–ª–∫—É –≤ —Ä–∞–∫–æ–≤–∏–Ω—É, —Ö–ª–æ–ø–Ω—É–ª –¥–≤–µ—Ä—å—é –∏ —É—à–µ–ª.",
            "block": "emotion"
        },
        {
            "question": "–û–ø–∏—à–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –≤—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –∏–Ω—Ç–∏–º–Ω–æ–π –±–ª–∏–∑–æ—Å—Ç–∏. –ö–∞–∫ –∏–º–µ–Ω–Ω–æ –æ—Ç—Ä–µ–∞–≥–∏—Ä–æ–≤–∞–ª –ø–∞—Ä—Ç–Ω–µ—Ä? –ß—Ç–æ –æ–Ω —Å–∫–∞–∑–∞–ª –∏–ª–∏ —Å–¥–µ–ª–∞–ª?",
            "answer": "–Ø —Å–∫–∞–∑–∞–ª–∞, —á—Ç–æ –Ω–µ –≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏. –û–Ω –æ—Ç–≤–µ—Ç–∏–ª: '–¢—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏. –ù–∞–≤–µ—Ä–Ω–æ–µ, —É —Ç–µ–±—è –∫—Ç–æ-—Ç–æ –µ—Å—Ç—å.' –ü–æ—Ç–æ–º –≤—Å—é –Ω–µ–¥–µ–ª—é –±—ã–ª —Ö–æ–ª–æ–¥–Ω—ã–º –∏ –≥–æ–≤–æ—Ä–∏–ª, —á—Ç–æ —è –µ–≥–æ –Ω–µ –ª—é–±–ª—é.",
            "block": "intimacy"
        },
        {
            "question": "–û–ø–∏—à–∏—Ç–µ –Ω–µ–¥–∞–≤–Ω–µ–µ —Å–æ–±—ã—Ç–∏–µ, –≥–¥–µ –≤—ã –±—ã–ª–∏ —Å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º —Å—Ä–µ–¥–∏ –¥—Ä—É–≥–∏—Ö –ª—é–¥–µ–π. –ö–∞–∫ –æ–Ω –≤–µ–ª —Å–µ–±—è —Å –≤–∞–º–∏ –ø—Ä–∏ —Å–≤–∏–¥–µ—Ç–µ–ª—è—Ö vs –¥–æ–º–∞ –ø–æ—Å–ª–µ?",
            "answer": "–ù–∞ –¥–Ω–µ —Ä–æ–∂–¥–µ–Ω–∏—è —É –¥—Ä—É–∑–µ–π –æ–Ω –±—ã–ª –æ—á–µ–Ω—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–º, –æ–±–Ω–∏–º–∞–ª –º–µ–Ω—è, –≥–æ–≤–æ—Ä–∏–ª –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã. –ê –¥–æ–º–∞ —Å—Ä–∞–∑—É —Å–∫–∞–∑–∞–ª: '–¢—ã –æ–ø—è—Ç—å –º–Ω–æ–≥–æ –±–æ–ª—Ç–∞–ª–∞, –≤—Å–µ—Ö —Ä–∞–∑–¥—Ä–∞–∂–∞–ª–∞ —Å–≤–æ–∏–º–∏ –∏—Å—Ç–æ—Ä–∏—è–º–∏. –ú–Ω–µ –±—ã–ª–æ —Å—Ç—ã–¥–Ω–æ –∑–∞ —Ç–µ–±—è.'",
            "block": "social"
        }
    ]
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
    ai_service = AIService()
    pdf_service = HTMLPDFService()
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑
    print("ü§ñ –í—ã–ø–æ–ª–Ω—è–µ–º AI –∞–Ω–∞–ª–∏–∑...")
    analysis_result = await ai_service.profile_partner_free_form(
        text_answers=test_answers,
        user_id=123,
        partner_name="–î–º–∏—Ç—Ä–∏–π",
        partner_description="–ú—É–∂, 35 –ª–µ—Ç, —Ä–∞–±–æ—Ç–∞–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º",
        partner_basic_info="–ñ–µ–Ω–∞—Ç 8 –ª–µ—Ç, –¥–≤–æ–µ –¥–µ—Ç–µ–π"
    )
    
    print(f"‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω! –†–∏—Å–∫: {analysis_result['overall_risk_score']}%")
    print(f"üîç –¢–∏–ø: {analysis_result['personality_type']}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
    print("\nüìä –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –±–ª–æ–∫–∏:")
    for block, score in analysis_result['block_scores'].items():
        print(f"  {block}: {score}/10")
    
    print(f"\nüö© –ö—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏ ({len(analysis_result['red_flags'])}):")
    for i, flag in enumerate(analysis_result['red_flags'][:5], 1):
        print(f"  {i}. {flag}")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF
    print("\nüìÑ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π PDF –æ—Ç—á–µ—Ç...")
    pdf_bytes = await pdf_service.generate_partner_report_html(
        analysis_data=analysis_result,
        user_id=123,
        partner_name="–î–º–∏—Ç—Ä–∏–π"
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º PDF
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    pdf_filename = f"dynamic_test_report_{timestamp}.pdf"
    
    with open(pdf_filename, 'wb') as f:
        f.write(pdf_bytes)
    
    print(f"‚úÖ PDF —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {pdf_filename}")
    print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {len(pdf_bytes)} –±–∞–π—Ç")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ Dark Triad –¥–∞–Ω–Ω—ã–µ
    dark_triad = pdf_service._extract_dark_triad_scores(analysis_result, analysis_result['overall_risk_score'])
    print(f"\nüé≠ Dark Triad –æ—Ü–µ–Ω–∫–∏:")
    print(f"  –ù–∞—Ä—Ü–∏—Å—Å–∏–∑–º: {dark_triad['narcissism']}/10")
    print(f"  –ú–∞–∫–∏–∞–≤–µ–ª–ª–∏–∑–º: {dark_triad['machiavellianism']}/10") 
    print(f"  –ü—Å–∏—Ö–æ–ø–∞—Ç–∏—è: {dark_triad['psychopathy']}/10")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã
    insights = pdf_service._generate_personalized_insights(analysis_result, "–î–º–∏—Ç—Ä–∏–π", analysis_result['overall_risk_score'])
    print(f"\nüí° –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã:")
    print(f"  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é—â–∏–µ –∑–Ω–∞–∫–∏: {len(insights['warning_signs'])}")
    print(f"  –ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã: {len(insights['behavioral_patterns'])}")
    print(f"  –ó–∞—â–∏—Ç–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã: {len(insights['protective_mechanisms'])}")
    print(f"  –†–µ—Å—É—Ä—Å—ã –ø–æ–º–æ—â–∏: {len(insights['help_resources'])}")
    
    print(f"\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –í—Å–µ –±–ª–æ–∫–∏ —Ç–µ–ø–µ—Ä—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ!")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è
    results_filename = f"dynamic_analysis_result_{timestamp}.json"
    with open(results_filename, 'w', encoding='utf-8') as f:
        json.dump(analysis_result, f, ensure_ascii=False, indent=2)
    
    print(f"üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {results_filename}")

if __name__ == "__main__":
    asyncio.run(test_dynamic_blocks()) 