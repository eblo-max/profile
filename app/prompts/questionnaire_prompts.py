"""Questionnaire prompts for personality and compatibility analysis"""

# Partner Profiler Questions
PROFILER_QUESTIONS = {
    1: {
        "question": "–ö–∞–∫ –≤–∞—à –ø–∞—Ä—Ç–Ω–µ—Ä –æ–±—ã—á–Ω–æ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç, –∫–æ–≥–¥–∞ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –µ–≥–æ –º–Ω–µ–Ω–∏–µ–º?",
        "description": "–û–ø–∏—à–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã —Ä–µ–∞–∫—Ü–∏–π –Ω–∞ –Ω–µ—Å–æ–≥–ª–∞—Å–∏–µ"
    },
    2: {
        "question": "–ö–∞–∫ –ø–∞—Ä—Ç–Ω–µ—Ä –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –≤–∞—à–∏–º –¥—Ä—É–∑—å—è–º –∏ —Å–µ–º—å–µ? –ü–æ–æ—â—Ä—è–µ—Ç –ª–∏ –æ–±—â–µ–Ω–∏–µ —Å –Ω–∏–º–∏?",
        "description": "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –µ–≥–æ –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –∫ –≤–∞—à–µ–º—É –æ–∫—Ä—É–∂–µ–Ω–∏—é"
    },
    3: {
        "question": "–ö–∞–∫ –≤–∞—à –ø–∞—Ä—Ç–Ω–µ—Ä –≤–µ–¥–µ—Ç —Å–µ–±—è, –∫–æ–≥–¥–∞ –∑–ª–∏—Ç—Å—è –∏–ª–∏ —Ä–∞—Å—Å—Ç—Ä–æ–µ–Ω?",
        "description": "–û–ø–∏—à–∏—Ç–µ –µ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö"
    },
    4: {
        "question": "–£–≤–∞–∂–∞–µ—Ç –ª–∏ –ø–∞—Ä—Ç–Ω–µ—Ä –≤–∞—à–∏ –≥—Ä–∞–Ω–∏—Ü—ã –∏ –ª–∏—á–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ?",
        "description": "–ü—Ä–∏–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–º–µ—Ä—ã —Å–æ–±–ª—é–¥–µ–Ω–∏—è –∏–ª–∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è –≥—Ä–∞–Ω–∏—Ü"
    },
    5: {
        "question": "–ö–∞–∫ –ø–∞—Ä—Ç–Ω–µ—Ä –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –≤–∞—à–∏–º —É—Å–ø–µ—Ö–∞–º –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º?",
        "description": "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ –æ–Ω –≤–∞—à–∏ —Ü–µ–ª–∏ –∏ –ø—Ä–∞–∑–¥–Ω—É–µ—Ç —É—Å–ø–µ—Ö–∏?"
    }
}

# Personality Type Questions  
PERSONALITY_QUESTIONS = {
    1: {
        "question": "–ö–∞–∫ –≤—ã –æ–±—ã—á–Ω–æ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç–µ –Ω–∞ –∫—Ä–∏—Ç–∏–∫—É –∏–ª–∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å?",
        "options": [
            "–ü—Ä–∏–Ω–∏–º–∞—é –∫ —Å–≤–µ–¥–µ–Ω–∏—é –∏ —Ä–∞–±–æ—Ç–∞—é –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º",
            "–ó–∞—â–∏—â–∞—é—Å—å –∏ –æ–±—ä—è—Å–Ω—è—é —Å–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è", 
            "–†–∞—Å—Å—Ç—Ä–∞–∏–≤–∞—é—Å—å, –Ω–æ –ø–æ—Ç–æ–º –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é",
            "–ó–ª—é—Å—å –∏ —Å—á–∏—Ç–∞—é –∫—Ä–∏—Ç–∏–∫—É –Ω–µ—Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–π"
        ]
    },
    2: {
        "question": "–ß—Ç–æ –¥–ª—è –≤–∞—Å –≤–∞–∂–Ω–µ–µ –≤—Å–µ–≥–æ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö?",
        "options": [
            "–í–∑–∞–∏–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –±–ª–∏–∑–æ—Å—Ç—å",
            "–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–∞",
            "–û–±—â–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏ —Å–æ–≤–º–µ—Å—Ç–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
            "–°—Ç—Ä–∞—Å—Ç—å –∏ —Ä–æ–º–∞–Ω—Ç–∏–∫–∞"
        ]
    },
    3: {
        "question": "–ö–∞–∫ –≤—ã –≤–µ–¥–µ—Ç–µ —Å–µ–±—è –≤ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö?",
        "options": [
            "–°—Ç–∞—Ä–∞—é—Å—å –Ω–∞–π—Ç–∏ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å –∏ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É",
            "–ò–∑–±–µ–≥–∞—é –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –∏ –∂–¥—É, –ø–æ–∫–∞ –≤—Å—ë —É–ª–∞–¥–∏—Ç—Å—è",
            "–û—Ç–∫—Ä—ã—Ç–æ –≤—ã—Ä–∞–∂–∞—é —Å–≤–æ–∏ —ç–º–æ—Ü–∏–∏ –∏ –º–Ω–µ–Ω–∏–µ",
            "–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å–∏—Ç—É–∞—Ü–∏—é –∏ –∏—â—É –ª–æ–≥–∏—á–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ"
        ]
    }
}

# Compatibility Test Questions
COMPATIBILITY_QUESTIONS = {
    1: {
        "question": "–ö–∞–∫ –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è?",
        "description": "–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –ª—é–±–∏–º—ã–µ –≤–∏–¥—ã –æ—Ç–¥—ã—Ö–∞ –∏ —Ö–æ–±–±–∏"
    },
    2: {
        "question": "–ß—Ç–æ –¥–ª—è –≤–∞—Å –æ–∑–Ω–∞—á–∞–µ—Ç –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—á–µ—Ä –≤–¥–≤–æ–µ–º?",
        "description": "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–∏—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è—Ö –æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –≤–º–µ—Å—Ç–µ"
    },
    3: {
        "question": "–ö–∞–∫ –≤—ã –≤–∏–¥–∏—Ç–µ —Å–≤–æ–µ –±—É–¥—É—â–µ–µ —á–µ—Ä–µ–∑ 5 –ª–µ—Ç?",
        "description": "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–∏–º–∏ –ø–ª–∞–Ω–∞–º–∏ –∏ –º–µ—á—Ç–∞–º–∏ –Ω–∞ –±—É–¥—É—â–µ–µ"
    },
    4: {
        "question": "–ß—Ç–æ –¥–ª—è –≤–∞—Å –≤–∞–∂–Ω–µ–µ: –∫–∞—Ä—å–µ—Ä–∞ –∏–ª–∏ —Å–µ–º—å—è? –ü–æ—á–µ–º—É?",
        "description": "–û–±—ä—è—Å–Ω–∏—Ç–µ –≤–∞—à–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –∏ —Ü–µ–Ω–Ω–æ—Å—Ç–∏"
    },
    5: {
        "question": "–ö–∞–∫ –≤—ã —Ä–∞–∑—Ä–µ—à–∞–µ—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö?",
        "description": "–û–ø–∏—à–∏—Ç–µ –≤–∞—à –ø–æ–¥—Ö–æ–¥ –∫ —Ä–µ—à–µ–Ω–∏—é —Ä–∞–∑–Ω–æ–≥–ª–∞—Å–∏–π"
    }
}

# Question templates for dynamic generation
def get_profiler_question(question_id: int) -> dict:
    """Get profiler question by ID"""
    return PROFILER_QUESTIONS.get(question_id, {
        "question": "–í–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω",
        "description": ""
    })

def get_personality_question(question_id: int) -> dict:
    """Get personality question by ID"""
    return PERSONALITY_QUESTIONS.get(question_id, {
        "question": "–í–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω",
        "options": []
    })

def get_compatibility_question(question_id: int) -> dict:
    """Get compatibility question by ID"""
    return COMPATIBILITY_QUESTIONS.get(question_id, {
        "question": "–í–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω", 
        "description": ""
    })

def format_profiler_questions() -> str:
    """Format all profiler questions for display"""
    questions_text = "üîç **–ê–ù–ê–õ–ò–ó –ü–ê–†–¢–ù–ï–†–ê**\n\n"
    questions_text += "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –æ –≤–∞—à–µ–º –ø–∞—Ä—Ç–Ω–µ—Ä–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —á–µ—Å—Ç–Ω–æ –∏ –ø–æ–¥—Ä–æ–±–Ω–æ:\n\n"
    
    for q_id, q_data in PROFILER_QUESTIONS.items():
        questions_text += f"**{q_id}. {q_data['question']}**\n"
        questions_text += f"_{q_data['description']}_\n\n"
    
    return questions_text

def format_personality_questions() -> str:
    """Format personality questions for display"""
    questions_text = "üß† **–û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –¢–ò–ü–ê –õ–ò–ß–ù–û–°–¢–ò**\n\n"
    
    for q_id, q_data in PERSONALITY_QUESTIONS.items():
        questions_text += f"**{q_id}. {q_data['question']}**\n"
        for i, option in enumerate(q_data['options'], 1):
            questions_text += f"{i}. {option}\n"
        questions_text += "\n"
    
    return questions_text

def format_compatibility_questions() -> str:
    """Format compatibility questions for display"""
    questions_text = "üíï **–¢–ï–°–¢ –ù–ê –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–¨**\n\n"
    questions_text += "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ—Ç —Å–µ–±—è –∏ –æ—Ç –ª–∏—Ü–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–∞:\n\n"
    
    for q_id, q_data in COMPATIBILITY_QUESTIONS.items():
        questions_text += f"**{q_id}. {q_data['question']}**\n"
        questions_text += f"_{q_data['description']}_\n\n"
    
    return questions_text

# Additional helper functions
def validate_profiler_answers(answers: dict) -> tuple[bool, str]:
    """Validate profiler answers completeness"""
    required_questions = list(PROFILER_QUESTIONS.keys())
    missing_questions = []
    
    for q_id in required_questions:
        if q_id not in answers or not answers[q_id].strip():
            missing_questions.append(q_id)
    
    if missing_questions:
        return False, f"–ü—Ä–æ–ø—É—â–µ–Ω—ã –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã: {', '.join(map(str, missing_questions))}"
    
    return True, "–í—Å–µ –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã"

def validate_personality_answers(answers: dict) -> tuple[bool, str]:
    """Validate personality answers"""
    required_questions = list(PERSONALITY_QUESTIONS.keys())
    missing_questions = []
    
    for q_id in required_questions:
        if q_id not in answers:
            missing_questions.append(q_id)
    
    if missing_questions:
        return False, f"–ü—Ä–æ–ø—É—â–µ–Ω—ã –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã: {', '.join(map(str, missing_questions))}"
    
    return True, "–í—Å–µ –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã"

def validate_compatibility_answers(user_answers: dict, partner_answers: dict) -> tuple[bool, str]:
    """Validate compatibility test answers"""
    required_questions = list(COMPATIBILITY_QUESTIONS.keys())
    
    # Check user answers
    missing_user = [q_id for q_id in required_questions if q_id not in user_answers or not user_answers[q_id].strip()]
    if missing_user:
        return False, f"–ü—Ä–æ–ø—É—â–µ–Ω—ã –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã: {', '.join(map(str, missing_user))}"
    
    # Check partner answers  
    missing_partner = [q_id for q_id in required_questions if q_id not in partner_answers or not partner_answers[q_id].strip()]
    if missing_partner:
        return False, f"–ü—Ä–æ–ø—É—â–µ–Ω—ã –æ—Ç–≤–µ—Ç—ã –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã: {', '.join(map(str, missing_partner))}"
    
    return True, "–í—Å–µ –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã"

# Sample answers for testing
SAMPLE_PROFILER_ANSWERS = {
    1: "–û–±—ã—á–Ω–æ –æ–Ω —Å–ø–æ–∫–æ–π–Ω–æ –≤—ã—Å–ª—É—à–∏–≤–∞–µ—Ç –º–æ–µ –º–Ω–µ–Ω–∏–µ, –Ω–æ –∏–Ω–æ–≥–¥–∞ –º–æ–∂–µ—Ç –Ω–∞—Å—Ç–∞–∏–≤–∞—Ç—å –Ω–∞ —Å–≤–æ–µ–º. –í —Ü–µ–ª–æ–º —É–≤–∞–∂–∞–µ—Ç –º–æ—é —Ç–æ—á–∫—É –∑—Ä–µ–Ω–∏—è.",
    2: "–•–æ—Ä–æ—à–æ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –º–æ–∏–º –¥—Ä—É–∑—å—è–º, –∏–Ω–æ–≥–¥–∞ –º—ã –≤—Å–µ –≤–º–µ—Å—Ç–µ –ø—Ä–æ–≤–æ–¥–∏–º –≤—Ä–µ–º—è. –° —Å–µ–º—å–µ–π –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Ç–µ–ø–ª—ã–µ.",
    3: "–ö–æ–≥–¥–∞ –∑–ª–∏—Ç—Å—è, –º–æ–∂–µ—Ç –ø–æ–≤—ã—Å–∏—Ç—å –≥–æ–ª–æ—Å, –Ω–æ –ø–æ—Ç–æ–º –∏–∑–≤–∏–Ω—è–µ—Ç—Å—è. –°—Ç–∞—Ä–∞–µ—Ç—Å—è –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —ç–º–æ—Ü–∏–∏.",
    4: "–í –æ—Å–Ω–æ–≤–Ω–æ–º –¥–∞, –Ω–æ –∏–Ω–æ–≥–¥–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞–≤—è–∑—á–∏–≤—ã–º, –∫–æ–≥–¥–∞ —Ö–æ—á–µ—Ç –±–æ–ª—å—à–µ –≤–Ω–∏–º–∞–Ω–∏—è.",
    5: "–í—Å–µ–≥–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–æ–∏ —É—Å–ø–µ—Ö–∏, –≥–æ—Ä–¥–∏—Ç—Å—è –º–Ω–æ–π –∏ –ø–æ–º–æ–≥–∞–µ—Ç –¥–æ—Å—Ç–∏–≥–∞—Ç—å —Ü–µ–ª–µ–π."
}

SAMPLE_COMPATIBILITY_ANSWERS = {
    "user": {
        1: "–õ—é–±–ª—é —á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏, —Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º—ã, –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –π–æ–≥–æ–π. –¶–µ–Ω—é —Å–ø–æ–∫–æ–π–Ω—ã–π –æ—Ç–¥—ã—Ö –¥–æ–º–∞.",
        2: "–£—é—Ç–Ω—ã–π —É–∂–∏–Ω –¥–æ–º–∞, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã, –º–æ–∂–µ—Ç –±—ã—Ç—å —Ñ–∏–ª—å–º –∏–ª–∏ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã.",
        3: "–í–∏–∂—É —Å–µ–±—è –≤ —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö, –≤–æ–∑–º–æ–∂–Ω–æ —Å –¥–µ—Ç—å–º–∏, —Ä–∞–∑–≤–∏—Ç–∏–µ –≤ –∫–∞—Ä—å–µ—Ä–µ.",
        4: "–°—á–∏—Ç–∞—é, —á—Ç–æ –≤–∞–∂–µ–Ω –±–∞–ª–∞–Ω—Å. –°–µ–º—å—è –¥–∞–µ—Ç —Å–º—ã—Å–ª, –Ω–æ –∫–∞—Ä—å–µ—Ä–∞ - —ç—Ç–æ —Å–∞–º–æ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è.",
        5: "–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –æ—Ç–∫—Ä—ã—Ç—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä, –≤—ã—è—Å–Ω–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –∏ –ø–æ–∏—Å–∫ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å–∞."
    },
    "partner": {
        1: "–ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö, —Å–ø–æ—Ä—Ç, –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è. –ù–µ –ª—é–±–ª—é —Å–∏–¥–µ—Ç—å –¥–æ–º–∞ –±–µ–∑ –¥–µ–ª–∞.",
        2: "–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —É–∂–∏–Ω –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ, –ø—Ä–æ–≥—É–ª–∫–∞ –ø–æ –≥–æ—Ä–æ–¥—É, –Ω–æ–≤—ã–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è.",
        3: "–•–æ—á—É –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å, –æ—Ç–∫—Ä—ã—Ç—å —Å–≤–æ–π –±–∏–∑–Ω–µ—Å, –∂–∏—Ç—å —è—Ä–∫–æ–π –Ω–∞—Å—ã—â–µ–Ω–Ω–æ–π –∂–∏–∑–Ω—å—é.",
        4: "–ö–∞—Ä—å–µ—Ä–∞ –Ω–∞ –ø–µ—Ä–≤–æ–º –º–µ—Å—Ç–µ, —Å–µ–º—å—è –ø–æ—Ç–æ–º. –ù—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –¥–æ–±–∏—Ç—å—Å—è —É—Å–ø–µ—Ö–∞.",
        5: "–ù–µ –ª—é–±–ª—é –¥–æ–ª–≥–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö, –ª—É—á—à–µ –æ—Ç–≤–ª–µ—á—å—Å—è –∏ –∑–∞–±—ã—Ç—å."
    }
} 