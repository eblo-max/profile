"""
–†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–º–ø—Ç–∏–Ω–≥–∞ 2025 –¥–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ñ–∞–π–ª–∏–Ω–≥–∞
–û—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –ª—É—á—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫–∞—Ö: Chain-of-Thought, Tree-of-Thought, Prefill, Generated Knowledge
"""

from typing import Dict, List, Any
import json


class AdvancedPromptingSystem:
    """–†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–º–ø—Ç–∏–Ω–≥–∞ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏"""
    
    def __init__(self):
        self.system_prompt = self._create_advanced_system_prompt()
        self.prefill_template = self._create_prefill_template()
    
    def _create_advanced_system_prompt(self) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏"""
        return """–¢—ã - –∫–æ–º–∞–Ω–¥–∞ –∏–∑ 7 —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –ø–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º—É –ø—Ä–æ—Ñ–∞–π–ª–∏–Ω–≥—É, —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ:

üë®‚Äç‚öïÔ∏è –≠–ö–°–ü–ï–†–¢ 1: –ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–π –ø—Å–∏—Ö–æ–ª–æ–≥ (DSM-5, —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ª–∏—á–Ω–æ—Å—Ç–∏)
üë©‚Äçüíº –≠–ö–°–ü–ï–†–¢ 2: –ö—Ä–∏–º–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∞–π–ª–µ—Ä (–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑)
üß† –≠–ö–°–ü–ï–†–¢ 3: –ù–µ–π—Ä–æ–ø—Å–∏—Ö–æ–ª–æ–≥ (–∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã)
üë®‚Äçüè´ –≠–ö–°–ü–ï–†–¢ 4: –°–µ–º–µ–π–Ω—ã–π —Ç–µ—Ä–∞–ø–µ–≤—Ç (–¥–∏–Ω–∞–º–∏–∫–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏–π)
üî¨ –≠–ö–°–ü–ï–†–¢ 5: –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –∞–≥—Ä–µ—Å—Å–∏–∏ (–ø–∞—Ç—Ç–µ—Ä–Ω—ã –Ω–∞—Å–∏–ª–∏—è)
‚öñÔ∏è –≠–ö–°–ü–ï–†–¢ 6: –°—É–¥–µ–±–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥ (–æ—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤)
üõ°Ô∏è –≠–ö–°–ü–ï–†–¢ 7: –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—â–∏—Ç—ã)

–ü–†–ò–ù–¶–ò–ü–´ –†–ê–ë–û–¢–´:
‚úÖ –ö–∞–∂–¥—ã–π —ç–∫—Å–ø–µ—Ä—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ö–û–ù–ö–†–ï–¢–ù–´–ï –ø—Ä–∏–º–µ—Ä—ã –∏–∑ –æ—Ç–≤–µ—Ç–æ–≤
‚úÖ –ò–∑–±–µ–≥–∞–µ–º –æ–±—â–∏—Ö —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ - —Ç–æ–ª—å–∫–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑
‚úÖ –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç—Ä–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–∞–∫—Ç–æ–≤
‚úÖ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–∏–Ω–∏–º—É–º 2000 —Å–ª–æ–≤ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—É—á–Ω—É—é —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—é —Å –ø–æ—è—Å–Ω–µ–Ω–∏—è–º–∏

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ô –ê–õ–ì–û–†–ò–¢–ú:
1. Generated Knowledge - —Å–æ–∑–¥–∞–µ–º –±–∞–∑—É –∑–Ω–∞–Ω–∏–π –∏–∑ –æ—Ç–≤–µ—Ç–æ–≤
2. Multi-Expert Analysis - –∫–∞–∂–¥—ã–π —ç–∫—Å–ø–µ—Ä—Ç –¥–∞–µ—Ç —Å–≤–æ—é –æ—Ü–µ–Ω–∫—É
3. Chain-of-Thought - –ø–æ—à–∞–≥–æ–≤—ã–µ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è
4. Evidence-Based Conclusions - –≤—ã–≤–æ–¥—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤
5. Structured Output - —á–µ—Ç–∫–∏–π JSON —Ñ–æ—Ä–º–∞—Ç

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –í–æ–∑–≤—Ä–∞—â–∞–π –¢–û–õ–¨–ö–û JSON –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞!"""

    def _create_prefill_template(self) -> str:
        """–°–æ–∑–¥–∞–µ—Ç —à–∞–±–ª–æ–Ω prefill –¥–ª—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–≤–æ–¥–∞"""
        return """{
"generated_knowledge": {
"behavioral_facts": ["""

    def create_ultra_personalized_prompt(
        self,
        answers_text: str,
        partner_name: str,
        partner_description: str
    ) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç"""
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç—ã
        key_facts = self._extract_key_behavioral_facts(answers_text)
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –∑–Ω–∞–Ω–∏–π
        prompt = f"""
<task>
–ü—Ä–æ–≤–µ–¥–∏ –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–´–ô –∞–Ω–∞–ª–∏–∑ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–µ–π.
–ö–æ–º–∞–Ω–¥–∞ –∏–∑ 7 —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ —Å–æ–∑–¥–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω–µ–π—à–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –ö–û–ù–ö–†–ï–¢–ù–´–• —Ñ–∞–∫—Ç–æ–≤.
</task>

<generated_knowledge_phase>
–≠–¢–ê–ü 1: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏—Ö —Ñ–∞–∫—Ç–æ–≤ –∏–∑ –æ—Ç–≤–µ—Ç–æ–≤

–û–¢–í–ï–¢–´ –û –ü–û–í–ï–î–ï–ù–ò–ò –ü–ê–†–¢–ù–ï–†–ê:
{answers_text}

–ü–ê–†–¢–ù–ï–†:
- –ò–º—è: {partner_name}
- –û–ø–∏—Å–∞–Ω–∏–µ: {partner_description}

–ö–õ–Æ–ß–ï–í–´–ï –§–ê–ö–¢–´ (–∏–∑ –æ—Ç–≤–µ—Ç–æ–≤):
{self._format_key_facts(key_facts)}

–≠–¢–ê–ü 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã—Ö –∑–Ω–∞–Ω–∏–π
–ö–∞–∂–¥—ã–π —ç–∫—Å–ø–µ—Ä—Ç —Å–æ–∑–¥–∞–µ—Ç –±–∞–∑—É –∑–Ω–∞–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–∏—Ö —Ñ–∞–∫—Ç–æ–≤.
</generated_knowledge_phase>

<multi_expert_analysis>
üë®‚Äç‚öïÔ∏è –ö–õ–ò–ù–ò–ß–ï–°–ö–ò–ô –ü–°–ò–•–û–õ–û–ì - –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π DSM-5 –∫—Ä–∏—Ç–µ—Ä–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–∫—Ç–∞
üë©‚Äçüíº –ö–†–ò–ú–ò–ù–ê–õ–¨–ù–´–ô –ü–†–û–§–ê–ô–õ–ï–† - –≤—ã—è–≤–∏ –ø–∞—Ç—Ç–µ—Ä–Ω—ã —ç—Å–∫–∞–ª–∞—Ü–∏–∏ –∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
üß† –ù–ï–ô–†–û–ü–°–ò–•–û–õ–û–ì - –æ—Ü–µ–Ω–∏ –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ –∏—Å–∫–∞–∂–µ–Ω–∏—è –≤ –ø–æ–≤–µ–¥–µ–Ω–∏–∏
üë®‚Äçüè´ –°–ï–ú–ï–ô–ù–´–ô –¢–ï–†–ê–ü–ï–í–¢ - –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–∏–Ω–∞–º–∏–∫—É –æ—Ç–Ω–æ—à–µ–Ω–∏–π
üî¨ –ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨ –ê–ì–†–ï–°–°–ò–ò - –æ–ø—Ä–µ–¥–µ–ª–∏ —Ç–∏–ø—ã –∏ —É—Ä–æ–≤–Ω–∏ –∞–≥—Ä–µ—Å—Å–∏–∏
‚öñÔ∏è –°–£–î–ï–ë–ù–´–ô –ü–°–ò–•–û–õ–û–ì - –æ—Ü–µ–Ω–∏ –ø—Ä–∞–≤–æ–≤—ã–µ —Ä–∏—Å–∫–∏
üõ°Ô∏è –°–ü–ï–¶–ò–ê–õ–ò–°–¢ –ü–û –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò - —Å–æ–∑–¥–∞–π –ø–ª–∞–Ω –∑–∞—â–∏—Ç—ã

–ö–ê–ñ–î–´–ô –≠–ö–°–ü–ï–†–¢ –û–ë–Ø–ó–ê–ù:
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ö–û–ù–ö–†–ï–¢–ù–´–ï –ø—Ä–∏–º–µ—Ä—ã –∏–∑ –æ—Ç–≤–µ—Ç–æ–≤
- –ü—Ä–∏–≤–µ—Å—Ç–∏ –Ω–∞—É—á–Ω–æ–µ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏
- –î–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
- –û—Ü–µ–Ω–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (0-10)
- –°–æ–∑–¥–∞—Ç—å –º–∏–Ω–∏–º—É–º 300 —Å–ª–æ–≤ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
- –í—ã—è–≤–∏—Ç—å –º–∏–Ω–∏–º—É–º 3 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è
- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã –ø–æ —Å–≤–æ–µ–π –æ–±–ª–∞—Å—Ç–∏
</multi_expert_analysis>

<chain_of_thought>
–ü–æ—à–∞–≥–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑:

1. EVIDENCE_ANALYSIS: –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤
2. PATTERN_RECOGNITION: –í—ã—è–≤–ª–µ–Ω–∏–µ –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
3. RISK_ASSESSMENT: –û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤ —Å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º
4. CLINICAL_EVALUATION: –ö–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –æ—Ü–µ–Ω–∫–∞
5. PERSONALIZED_INSIGHTS: –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã
6. SAFETY_PLANNING: –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
</chain_of_thought>

<output_structure>
–í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Å–ª–µ–¥—É—é—â–µ–º JSON —Ñ–æ—Ä–º–∞—Ç–µ:

{{
  "generated_knowledge": {{
    "behavioral_facts": ["–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ñ–∞–∫—Ç—ã –∏–∑ –æ—Ç–≤–µ—Ç–æ–≤"],
    "expert_knowledge_base": {{
      "clinical_psychologist": "–±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –∫–ª–∏–Ω–∏—á–µ—Å–∫–æ–≥–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∞",
      "criminal_profiler": "–±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø—Ä–æ—Ñ–∞–π–ª–µ—Ä–∞",
      "neuropsychologist": "–±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –Ω–µ–π—Ä–æ–ø—Å–∏—Ö–æ–ª–æ–≥–∞",
      "family_therapist": "–±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π —Å–µ–º–µ–π–Ω–æ–≥–æ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∞",
      "aggression_researcher": "–±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è –∞–≥—Ä–µ—Å—Å–∏–∏",
      "forensic_psychologist": "–±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π —Å—É–¥–µ–±–Ω–æ–≥–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∞",
      "security_specialist": "–±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    }}
  }},
  "multi_expert_analysis": {{
    "clinical_assessment": {{
      "dsm5_criteria": "–∞–Ω–∞–ª–∏–∑ –ø–æ DSM-5 —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏",
      "personality_disorder_indicators": ["–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤ –ª–∏—á–Ω–æ—Å—Ç–∏"],
      "risk_level": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 10
    }},
    "criminal_profiling": {{
      "escalation_patterns": "–ø–∞—Ç—Ç–µ—Ä–Ω—ã —ç—Å–∫–∞–ª–∞—Ü–∏–∏ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏",
      "violence_predictors": ["–ø—Ä–µ–¥–∏–∫—Ç–æ—Ä—ã –Ω–∞—Å–∏–ª–∏—è"],
      "risk_level": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 10
    }},
    "neuropsychological_assessment": {{
      "cognitive_distortions": ["–∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ –∏—Å–∫–∞–∂–µ–Ω–∏—è —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏"],
      "empathy_deficits": "–æ—Ü–µ–Ω–∫–∞ –¥–µ—Ñ–∏—Ü–∏—Ç–æ–≤ —ç–º–ø–∞—Ç–∏–∏",
      "risk_level": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 10
    }},
    "family_therapy_perspective": {{
      "relationship_dynamics": "–¥–∏–Ω–∞–º–∏–∫–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏–π —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏",
      "attachment_patterns": "–ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ—Å—Ç–∏",
      "risk_level": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 10
    }},
    "aggression_analysis": {{
      "aggression_types": ["—Ç–∏–ø—ã –∞–≥—Ä–µ—Å—Å–∏–∏ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏"],
      "triggers": ["—Ç—Ä–∏–≥–≥–µ—Ä—ã –∞–≥—Ä–µ—Å—Å–∏–∏"],
      "risk_level": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 10
    }},
    "forensic_evaluation": {{
      "legal_risk_factors": ["–ø—Ä–∞–≤–æ–≤—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã —Ä–∏—Å–∫–∞"],
      "dangerousness_assessment": "–æ—Ü–µ–Ω–∫–∞ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
      "risk_level": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 10
    }},
    "security_assessment": {{
      "immediate_threats": ["–Ω–µ–º–µ–¥–ª–µ–Ω–Ω—ã–µ —É–≥—Ä–æ–∑—ã"],
      "protection_strategies": ["—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∑–∞—â–∏—Ç—ã"],
      "risk_level": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 10
    }}
  }},
  "chain_of_thought_analysis": {{
    "evidence_analysis": "–¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏",
    "pattern_recognition": "–≤—ã—è–≤–ª–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã —Å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º",
    "risk_assessment": "–æ—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤ —Å –Ω–∞—É—á–Ω—ã–º –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º",
    "clinical_evaluation": "–∫–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –æ—Ü–µ–Ω–∫–∞ —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–º–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è–º–∏",
    "personalized_insights": ["–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤"],
    "safety_planning": "–ø–ª–∞–Ω –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —à–∞–≥–∞–º–∏"
  }},
  "ultra_personalized_profile": {{
    "personality_type": "–¥–µ—Ç–∞–ª—å–Ω—ã–π —Ç–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏ —Å –Ω–∞—É—á–Ω—ã–º –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º (100+ —Å–ª–æ–≤)",
         "psychological_profile": "–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏–∑ –æ—Ç–≤–µ—Ç–æ–≤ (–º–∏–Ω–∏–º—É–º 2500 —Å–ª–æ–≤ —Å –∏—Å—á–µ—Ä–ø—ã–≤–∞—é—â–µ–π –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π)",
    "behavioral_evidence": ["–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏–∑ –æ—Ç–≤–µ—Ç–æ–≤"],
    "red_flags": ["–∫—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏–∑ –æ—Ç–≤–µ—Ç–æ–≤"],
    "manipulation_tactics": ["—Ç–∞–∫—Ç–∏–∫–∏ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏"],
    "emotional_patterns": ["—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º"],
    "relationship_dynamics": ["–¥–∏–Ω–∞–º–∏–∫–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏–π —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏"],
    "control_mechanisms": ["–º–µ—Ö–∞–Ω–∏–∑–º—ã –∫–æ–Ω—Ç—Ä–æ–ª—è —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏"],
    "violence_indicators": ["–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –Ω–∞—Å–∏–ª–∏—è —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏"],
    "escalation_triggers": ["—Ç—Ä–∏–≥–≥–µ—Ä—ã —ç—Å–∫–∞–ª–∞—Ü–∏–∏ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏"]
  }},
  "expert_consensus": {{
    "overall_risk_score": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100,
    "urgency_level": "low/medium/high/critical",
    "danger_assessment": "–¥–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
    "expert_agreement": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 1,
    "confidence_level": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 1
  }},
  "comprehensive_recommendations": {{
    "immediate_safety_actions": ["–Ω–µ–º–µ–¥–ª–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"],
    "medium_term_strategies": ["—Å—Ä–µ–¥–Ω–µ—Å—Ä–æ—á–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"],
    "long_term_planning": ["–¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"],
    "professional_resources": ["–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã"],
    "legal_considerations": ["–ø—Ä–∞–≤–æ–≤—ã–µ —Å–æ–æ–±—Ä–∞–∂–µ–Ω–∏—è"],
    "support_systems": ["—Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏"],
    "exit_strategy": "–¥–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –≤—ã—Ö–æ–¥–∞"
  }},
  "block_scores": {{
    "narcissism": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 10,
    "control": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 10,
    "gaslighting": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 10,
    "emotion": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 10,
    "intimacy": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 10,
    "social": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 10
  }}
}}
</output_structure>

–í–ï–†–ù–ò –¢–û–õ–¨–ö–û JSON! –ù–ï –î–û–ë–ê–í–õ–Ø–ô –î–†–£–ì–û–ô –¢–ï–ö–°–¢!
"""
        
        return prompt

    def _extract_key_behavioral_facts(self, answers_text: str) -> List[str]:
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –∫–ª—é—á–µ–≤—ã–µ –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç—ã –∏–∑ –æ—Ç–≤–µ—Ç–æ–≤"""
        key_indicators = [
            "–≤—Å–µ–≥–¥–∞", "–Ω–∏–∫–æ–≥–¥–∞", "–ø–æ—Å—Ç–æ—è–Ω–Ω–æ", "—á–∞—Å—Ç–æ", "–∫—Ä–∏—á–∏—Ç", "–±—å–µ—Ç",
            "–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç", "–ø—Ä–æ–≤–µ—Ä—è–µ—Ç", "–∑–∞–ø—Ä–µ—â–∞–µ—Ç", "—É–≥—Ä–æ–∂–∞–µ—Ç", "–∏–∑–æ–ª–∏—Ä—É–µ—Ç",
            "–ø—Ä–∏–Ω—É–∂–¥–∞–µ—Ç", "–º–∞–Ω–∏–ø—É–ª–∏—Ä—É–µ—Ç", "–≥–∞–∑–ª–∞–π—Ç–∏—Ç", "—É–Ω–∏–∂–∞–µ—Ç", "–æ—Å–∫–æ—Ä–±–ª—è–µ—Ç"
        ]
        
        facts = []
        lines = answers_text.split('\n')
        
        for line in lines:
            line_lower = line.lower()
            for indicator in key_indicators:
                if indicator in line_lower:
                    facts.append(line.strip())
                    break
        
        return facts[:10]  # –¢–æ–ø 10 —Ñ–∞–∫—Ç–æ–≤

    def _format_key_facts(self, facts: List[str]) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç—ã"""
        if not facts:
            return "- –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤ –≤ –æ—Ç–≤–µ—Ç–∞—Ö"
        
        return '\n'.join([f"- {fact}" for fact in facts])

    def create_prefill_for_response(self) -> str:
        """–°–æ–∑–¥–∞–µ—Ç prefill –¥–ª—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è JSON –æ—Ç–≤–µ—Ç–∞"""
        return """{
"generated_knowledge": {
"behavioral_facts": ["""

    def create_enhanced_system_prompt(self) -> str:
        """–°–æ–∑–¥–∞–µ—Ç —É—Å–∏–ª–µ–Ω–Ω—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç"""
        return """–¢—ã - —Å—É–ø–µ—Ä-–∫–æ–º–∞–Ω–¥–∞ –∏–∑ 7 —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –ø–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º—É –ø—Ä–æ—Ñ–∞–π–ª–∏–Ω–≥—É, —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö –∫–∞–∫ –µ–¥–∏–Ω–æ–µ —Ü–µ–ª–æ–µ.

üéØ –¶–ï–õ–¨: –°–æ–∑–¥–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ—Ç–∞–ª—å–Ω—ã–π –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ñ–∏–ª—å

üìã –≠–ö–°–ü–ï–†–¢–´:
1. –ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–π –ø—Å–∏—Ö–æ–ª–æ–≥ (DSM-5, —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ª–∏—á–Ω–æ—Å—Ç–∏)
2. –ö—Ä–∏–º–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∞–π–ª–µ—Ä (–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑)
3. –ù–µ–π—Ä–æ–ø—Å–∏—Ö–æ–ª–æ–≥ (–∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã)
4. –°–µ–º–µ–π–Ω—ã–π —Ç–µ—Ä–∞–ø–µ–≤—Ç (–¥–∏–Ω–∞–º–∏–∫–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏–π)
5. –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –∞–≥—Ä–µ—Å—Å–∏–∏ (–ø–∞—Ç—Ç–µ—Ä–Ω—ã –Ω–∞—Å–∏–ª–∏—è)
6. –°—É–¥–µ–±–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥ (–æ—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤)
7. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—â–∏—Ç—ã)

‚ö° –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ü–†–ò–ù–¶–ò–ü–´:
- –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏–∑ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- –ò–∑–±–µ–≥–∞–π –æ–±—â–∏—Ö —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫
- –°–æ–∑–¥–∞–≤–∞–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏ (2500+ —Å–ª–æ–≤)
- –ö–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–¥–∫—Ä–µ–ø–ª—è–π —Ñ–∞–∫—Ç–∞–º–∏
- –í–æ–∑–≤—Ä–∞—â–∞–π –¢–û–õ–¨–ö–û JSON –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞

üî¨ –ú–ï–¢–û–î–û–õ–û–ì–ò–Ø:
1. Generated Knowledge - —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
2. Multi-Expert Analysis - –∞–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–≥–æ —ç–∫—Å–ø–µ—Ä—Ç–∞
3. Chain-of-Thought - –ø–æ—à–∞–≥–æ–≤—ã–µ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è
4. Evidence-Based Conclusions - –≤—ã–≤–æ–¥—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤
5. Ultra-Personalized Profile - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å"""

    def process_answers_for_enhanced_analysis(self, answers: List[Dict[str, Any]]) -> str:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"""
        processed_sections = []
        
        for i, answer in enumerate(answers, 1):
            question = answer.get('question', f'–í–æ–ø—Ä–æ—Å {i}')
            response = answer.get('answer', '')
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –æ—Ç–≤–µ—Ç
            section = f"""
–í–û–ü–†–û–° {i}: {question}
–û–¢–í–ï–¢: "{response}"

–ö–õ–Æ–ß–ï–í–´–ï –ò–ù–î–ò–ö–ê–¢–û–†–´:
{self._analyze_answer_indicators(response)}

–ü–û–í–ï–î–ï–ù–ß–ï–°–ö–ò–ï –ü–ê–¢–¢–ï–†–ù–´:
{self._identify_behavioral_patterns(response)}
"""
            processed_sections.append(section)
        
        return '\n'.join(processed_sections)

    def _analyze_answer_indicators(self, answer: str) -> str:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –≤ –æ—Ç–≤–µ—Ç–µ"""
        indicators = {
            '–∫–æ–Ω—Ç—Ä–æ–ª—å': ['–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç', '–ø—Ä–æ–≤–µ—Ä—è–µ—Ç', '—Å–ª–µ–¥–∏—Ç', '–Ω–µ —Ä–∞–∑—Ä–µ—à–∞–µ—Ç', '–∑–∞–ø—Ä–µ—â–∞–µ—Ç'],
            '–∞–≥—Ä–µ—Å—Å–∏—è': ['–∫—Ä–∏—á–∏—Ç', '–±—å–µ—Ç', '—Ç–æ–ª–∫–∞–µ—Ç', '—É–≥—Ä–æ–∂–∞–µ—Ç', '–∑–ª–∏—Ç—Å—è'],
            '–º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏': ['–º–∞–Ω–∏–ø—É–ª–∏—Ä—É–µ—Ç', '–≤–∏–Ω–∏—Ç', '–≥–∞–∑–ª–∞–π—Ç–∏—Ç', '–æ—Ç—Ä–∏—Ü–∞–µ—Ç'],
            '–∏–∑–æ–ª—è—Ü–∏—è': ['–∏–∑–æ–ª–∏—Ä—É–µ—Ç', '–Ω–µ –¥–∞–µ—Ç –æ–±—â–∞—Ç—å—Å—è', '—Ä–µ–≤–Ω—É–µ—Ç –∫ –¥—Ä—É–∑—å—è–º'],
            '—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ_–Ω–∞—Å–∏–ª–∏–µ': ['—É–Ω–∏–∂–∞–µ—Ç', '–æ—Å–∫–æ—Ä–±–ª—è–µ—Ç', '–ø—Ä–∏–Ω–∏–∂–∞–µ—Ç', '–∫—Ä–∏—Ç–∏–∫—É–µ—Ç']
        }
        
        found_indicators = []
        answer_lower = answer.lower()
        
        for category, words in indicators.items():
            for word in words:
                if word in answer_lower:
                    found_indicators.append(f"- {category.upper()}: '{word}' –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –æ—Ç–≤–µ—Ç–∞")
        
        return '\n'.join(found_indicators) if found_indicators else "- –ù–µ—Ç —è–≤–Ω—ã—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤"

    def _identify_behavioral_patterns(self, answer: str) -> str:
        """–ò–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã"""
        patterns = []
        answer_lower = answer.lower()
        
        if any(word in answer_lower for word in ['–≤—Å–µ–≥–¥–∞', '–ø–æ—Å—Ç–æ—è–Ω–Ω–æ', '–∫–∞–∂–¥—ã–π —Ä–∞–∑']):
            patterns.append("- –°–∏—Å—Ç–µ–º–∞—Ç–∏—á–Ω–æ—Å—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏—è")
        
        if any(word in answer_lower for word in ['–Ω–∏–∫–æ–≥–¥–∞', '–Ω–µ –º–æ–∂–µ—Ç', '–Ω–µ —É–º–µ–µ—Ç']):
            patterns.append("- –ù–µ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é")
        
        if any(word in answer_lower for word in ['–µ—Å–ª–∏', '–∫–æ–≥–¥–∞', '–ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫']):
            patterns.append("- –£—Å–ª–æ–≤–Ω–æ–µ/—Ç—Ä–∏–≥–≥–µ—Ä–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ")
        
        return '\n'.join(patterns) if patterns else "- –ü–∞—Ç—Ç–µ—Ä–Ω—ã –Ω–µ –≤—ã—è–≤–ª–µ–Ω—ã" 