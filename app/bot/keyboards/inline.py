"""Inline keyboards for bot interface"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List, Optional


def main_menu_kb() -> InlineKeyboardMarkup:
    """Main menu keyboard"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üìù –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞", callback_data="analysis_menu"),
        InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–∞—Ä—Ç–Ω–µ—Ä–∞", callback_data="profiler_menu")
    )
    builder.row(
        InlineKeyboardButton(text="üíï –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å", callback_data="compatibility_menu"),
        InlineKeyboardButton(text="üìÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Å–æ–≤–µ—Ç—ã", callback_data="daily_menu")
    )
    builder.row(
        InlineKeyboardButton(text="‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile_menu"),
        InlineKeyboardButton(text="üíé –ü–æ–¥–ø–∏—Å–∫–∞", callback_data="subscription_menu")
    )
    
    return builder.as_markup()


def analysis_menu_kb() -> InlineKeyboardMarkup:
    """Text analysis menu keyboard"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üì± –ê–Ω–∞–ª–∏–∑ –ø–µ—Ä–µ–ø–∏—Å–∫–∏", callback_data="analyze_chat"),
        InlineKeyboardButton(text="üí¨ –ê–Ω–∞–ª–∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è", callback_data="analyze_message")
    )
    builder.row(
        InlineKeyboardButton(text="üìä –ò—Å—Ç–æ—Ä–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤", callback_data="analysis_history")
    )
    builder.row(
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    )
    
    return builder.as_markup()


def profiler_menu_kb() -> InlineKeyboardMarkup:
    """Partner profiler menu keyboard"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üÜï –ù–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å", callback_data="create_profile"),
        InlineKeyboardButton(text="üìã –ú–æ–∏ –ø—Ä–æ—Ñ–∏–ª–∏", callback_data="my_profiles")
    )
    builder.row(
        InlineKeyboardButton(text="üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", callback_data="profile_recommendations")
    )
    builder.row(
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    )
    
    return builder.as_markup()


def compatibility_menu_kb() -> InlineKeyboardMarkup:
    """Compatibility test menu keyboard"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üß™ –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç", callback_data="start_compatibility"),
        InlineKeyboardButton(text="üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤", callback_data="compatibility_results")
    )
    builder.row(
        InlineKeyboardButton(text="üíë –°—Ä–∞–≤–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏", callback_data="compare_profiles")
    )
    builder.row(
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    )
    
    return builder.as_markup()


def daily_menu_kb() -> InlineKeyboardMarkup:
    """Daily content menu keyboard"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üìñ –°–æ–≤–µ—Ç –¥–Ω—è", callback_data="daily_tip"),
        InlineKeyboardButton(text="üéì –£—Ä–æ–∫ –¥–Ω—è", callback_data="daily_lesson")
    )
    builder.row(
        InlineKeyboardButton(text="üí° –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –¥–Ω—è", callback_data="daily_exercise")
    )
    builder.row(
        InlineKeyboardButton(text="üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π", callback_data="notification_settings")
    )
    builder.row(
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    )
    
    return builder.as_markup()


def profile_menu_kb() -> InlineKeyboardMarkup:
    """User profile menu keyboard"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="edit_profile"),
        InlineKeyboardButton(text="üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="my_stats")
    )
    builder.row(
        InlineKeyboardButton(text="üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è", callback_data="achievements"),
        InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
    )
    builder.row(
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    )
    
    return builder.as_markup()


def subscription_menu_kb() -> InlineKeyboardMarkup:
    """Subscription menu keyboard"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üíé Premium", callback_data="premium_info"),
        InlineKeyboardButton(text="üëë VIP", callback_data="vip_info")
    )
    builder.row(
        InlineKeyboardButton(text="üí≥ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="buy_subscription")
    )
    builder.row(
        InlineKeyboardButton(text="üìã –ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞", callback_data="my_subscription")
    )
    builder.row(
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    )
    
    return builder.as_markup()


def admin_menu_kb() -> InlineKeyboardMarkup:
    """Admin menu keyboard"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats"),
        InlineKeyboardButton(text="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", callback_data="admin_users")
    )
    builder.row(
        InlineKeyboardButton(text="üìù –ö–æ–Ω—Ç–µ–Ω—Ç", callback_data="admin_content"),
        InlineKeyboardButton(text="üí∞ –ü–ª–∞—Ç–µ–∂–∏", callback_data="admin_payments")
    )
    builder.row(
        InlineKeyboardButton(text="üì¢ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_broadcast")
    )
    builder.row(
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    )
    
    return builder.as_markup()


def confirmation_kb(action: str, data: str = "") -> InlineKeyboardMarkup:
    """Confirmation keyboard"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="‚úÖ –î–∞", callback_data=f"confirm_{action}_{data}"),
        InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data=f"cancel_{action}")
    )
    
    return builder.as_markup()


def back_to_main_kb() -> InlineKeyboardMarkup:
    """Back to main menu keyboard"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    )
    
    return builder.as_markup()


def back_to_profile_kb() -> InlineKeyboardMarkup:
    """Back to profile menu keyboard"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile_menu")
    )
    
    return builder.as_markup()


def profile_edit_kb() -> InlineKeyboardMarkup:
    """Profile editing menu keyboard"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data="start_profile_edit")
    )
    builder.row(
        InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile_menu"),
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    )
    
    return builder.as_markup()


def skip_kb(callback_data: str) -> InlineKeyboardMarkup:
    """Skip button keyboard"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data=f"skip_{callback_data}")
    )
    
    return builder.as_markup()


def gender_kb() -> InlineKeyboardMarkup:
    """Gender selection keyboard"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üë® –ú—É–∂—Å–∫–æ–π", callback_data="gender_male"),
        InlineKeyboardButton(text="üë© –ñ–µ–Ω—Å–∫–∏–π", callback_data="gender_female")
    )
    builder.row(
        InlineKeyboardButton(text="üö´ –ù–µ —É–∫–∞–∑—ã–≤–∞—Ç—å", callback_data="gender_skip")
    )
    
    return builder.as_markup()


def age_group_kb() -> InlineKeyboardMarkup:
    """Age group selection keyboard"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="18-25", callback_data="age_18_25"),
        InlineKeyboardButton(text="26-35", callback_data="age_26_35")
    )
    builder.row(
        InlineKeyboardButton(text="36-45", callback_data="age_36_45"),
        InlineKeyboardButton(text="46+", callback_data="age_46_plus")
    )
    builder.row(
        InlineKeyboardButton(text="üö´ –ù–µ —É–∫–∞–∑—ã–≤–∞—Ç—å", callback_data="age_skip")
    )
    
    return builder.as_markup()


def relationship_status_kb() -> InlineKeyboardMarkup:
    """Relationship status keyboard"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üíë –í –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö", callback_data="status_relationship"),
        InlineKeyboardButton(text="üíî –ù–µ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö", callback_data="status_single")
    )
    builder.row(
        InlineKeyboardButton(text="üíç –ñ–µ–Ω–∞—Ç/–∑–∞–º—É–∂–µ–º", callback_data="status_married"),
        InlineKeyboardButton(text="ü§î –°–ª–æ–∂–Ω–æ", callback_data="status_complicated")
    )
    builder.row(
        InlineKeyboardButton(text="üö´ –ù–µ —É–∫–∞–∑—ã–≤–∞—Ç—å", callback_data="status_skip")
    )
    
    return builder.as_markup()


def notification_settings_kb(notifications_enabled: bool = True) -> InlineKeyboardMarkup:
    """Notification settings keyboard"""
    builder = InlineKeyboardBuilder()
    
    status = "‚úÖ –í–∫–ª—é—á–µ–Ω—ã" if notifications_enabled else "‚ùå –í—ã–∫–ª—é—á–µ–Ω—ã"
    action = "disable" if notifications_enabled else "enable"
    
    builder.row(
        InlineKeyboardButton(text=f"üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {status}", callback_data=f"notifications_{action}")
    )
    builder.row(
        InlineKeyboardButton(text="‚è∞ –í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π", callback_data="notification_time")
    )
    builder.row(
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    )
    
    return builder.as_markup()


def questionnaire_navigation_kb(current_step: int, total_steps: int, 
                               has_prev: bool = True, has_next: bool = True) -> InlineKeyboardMarkup:
    """Questionnaire navigation keyboard"""
    builder = InlineKeyboardBuilder()
    
    nav_buttons = []
    
    if has_prev and current_step > 1:
        nav_buttons.append(
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"quest_prev_{current_step}")
        )
    
    if has_next and current_step < total_steps:
        nav_buttons.append(
            InlineKeyboardButton(text="–î–∞–ª–µ–µ ‚û°Ô∏è", callback_data=f"quest_next_{current_step}")
        )
    
    if nav_buttons:
        builder.row(*nav_buttons)
    
    # Progress and menu buttons
    builder.row(
        InlineKeyboardButton(
            text=f"üìä {current_step}/{total_steps}",
            callback_data="quest_progress"
        )
    )
    
    builder.row(
        InlineKeyboardButton(text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –≤—ã–π—Ç–∏", callback_data="quest_save"),
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    )
    
    return builder.as_markup()


def rating_kb(rating_type: str = "general") -> InlineKeyboardMarkup:
    """Rating keyboard (1-5 stars)"""
    builder = InlineKeyboardBuilder()
    
    stars = []
    for i in range(1, 6):
        stars.append(
            InlineKeyboardButton(
                text="‚≠ê" * i,
                callback_data=f"rate_{rating_type}_{i}"
            )
        )
    
    # Split into rows of 2-3 buttons
    builder.row(stars[0], stars[1])
    builder.row(stars[2], stars[3])
    builder.row(stars[4])
    
    return builder.as_markup()


def subscription_plans_kb() -> InlineKeyboardMarkup:
    """Subscription plans keyboard"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        InlineKeyboardButton(text="üíé Premium - 1 –º–µ—Å—è—Ü", callback_data="buy_premium_1"),
        InlineKeyboardButton(text="üíé Premium - 3 –º–µ—Å—è—Ü–∞", callback_data="buy_premium_3")
    )
    builder.row(
        InlineKeyboardButton(text="üëë VIP - 1 –º–µ—Å—è—Ü", callback_data="buy_vip_1"),
        InlineKeyboardButton(text="üëë VIP - 3 –º–µ—Å—è—Ü–∞", callback_data="buy_vip_3")
    )
    builder.row(
        InlineKeyboardButton(text="üéÅ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ", callback_data="trial_subscription")
    )
    builder.row(
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    )
    
    return builder.as_markup()


def pagination_kb(current_page: int, total_pages: int, prefix: str) -> InlineKeyboardMarkup:
    """Pagination keyboard"""
    builder = InlineKeyboardBuilder()
    
    buttons = []
    
    # Previous page
    if current_page > 1:
        buttons.append(
            InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"{prefix}_page_{current_page - 1}")
        )
    
    # Page info
    buttons.append(
        InlineKeyboardButton(
            text=f"{current_page}/{total_pages}",
            callback_data="page_info"
        )
    )
    
    # Next page
    if current_page < total_pages:
        buttons.append(
            InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"{prefix}_page_{current_page + 1}")
        )
    
    if buttons:
        builder.row(*buttons)
    
    return builder.as_markup() 