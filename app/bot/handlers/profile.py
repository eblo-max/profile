"""User profile handler"""

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from app.utils.exceptions import handle_errors
from app.bot.keyboards.inline import (
    profile_menu_kb, subscription_menu_kb, back_to_main_kb, 
    profile_edit_kb, back_to_profile_kb
)
from app.services.user_service import UserService
from app.core.logging import logger

router = Router()

@router.callback_query(F.data == "profile_menu")
@handle_errors
async def show_profile_menu(callback: CallbackQuery):
    """Show user profile menu"""
    menu_text = """
‚öôÔ∏è **–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å**

–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞—à–∏–º –ø—Ä–æ—Ñ–∏–ª–µ–º –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏:

üìù **–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å** - –∏–∑–º–µ–Ω–∏—Ç—å –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
üìä **–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞** - –ø—Ä–æ—Å–º–æ—Ç—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –∞–Ω–∞–ª–∏–∑–æ–≤
üèÜ **–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è** - –≤–∞—à–∏ —É—Å–ø–µ—Ö–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
‚öôÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∏** - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è

–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?
"""
    
    await callback.message.edit_text(
        menu_text,
        reply_markup=profile_menu_kb(),
        parse_mode="Markdown"
    )
    await callback.answer()

@router.callback_query(F.data == "edit_profile")
async def edit_profile(callback: CallbackQuery, user_service: UserService) -> None:
    """Show profile editing menu"""
    try:
        # Get user data from database
        user = await user_service.get_user_by_telegram_id(callback.from_user.id)
        if not user:
            await callback.message.edit_text(
                "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω",
                reply_markup=back_to_profile_kb()
            )
            return
        
        # Get subscription info
        subscription = None
        if user.subscriptions:
            subscription = user.subscriptions[0]  # Get the latest subscription
        
        # Format gender display
        gender_display = "–ù–µ —É–∫–∞–∑–∞–Ω"
        if user.gender == "male":
            gender_display = "–ú—É–∂—Å–∫–æ–π"
        elif user.gender == "female":
            gender_display = "–ñ–µ–Ω—Å–∫–∏–π"
        elif user.gender:
            gender_display = user.gender.capitalize()
        
        # Format age group display
        age_display = user.age_group or "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
        
        # Format interests
        interests_text = "–ù–µ —É–∫–∞–∑–∞–Ω—ã"
        if user.interests_list:
            interests_text = ", ".join(user.interests_list)
        
        # Format goals
        goals_text = "–ù–µ —É–∫–∞–∑–∞–Ω—ã"
        if user.goals_list:
            goals_text = ", ".join(user.goals_list)
        
        profile_text = f"""üìù **–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è**

üë§ **–ò–º—è:** {user.display_name or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üöª **–ü–æ–ª:** {gender_display}
üéÇ **–í–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞:** {age_display}
üí´ **–ò–Ω—Ç–µ—Ä–µ—Å—ã:** {interests_text}
üéØ **–¶–µ–ª–∏:** {goals_text}
üìã **–û —Å–µ–±–µ:** {user.bio or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}

üíé **–ü–æ–¥–ø–∏—Å–∫–∞:** {user.subscription_type}
üìä **–ê–Ω–∞–ª–∏–∑–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ:** {user.total_analyses}

–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start"""

        await callback.message.edit_text(
            profile_text,
            reply_markup=profile_edit_kb(),
            parse_mode="Markdown"
        )
        
    except Exception as e:
        logger.error(f"Error in edit_profile: {e}")
        await callback.message.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö.\n–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /start.",
            reply_markup=back_to_profile_kb()
        )

@router.callback_query(F.data == "my_stats")
@handle_errors
async def my_stats(callback: CallbackQuery):
    """Show user statistics"""
    await callback.message.edit_text(
        "üìä **–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞**\n\n"
        "üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: –°–µ–≥–æ–¥–Ω—è\n"
        "üìù –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–Ω–∞–ª–∏–∑–æ–≤: 0\n"
        "üë§ –°–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π: 0\n"
        "üíï –¢–µ—Å—Ç–æ–≤ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏: 0\n"
        "‚≠ê –†–µ–π—Ç–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: –ù–æ–≤–∏—á–æ–∫\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ—Ç–∞ –±–æ–ª—å—à–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏!",
        reply_markup=back_to_main_kb(),
        parse_mode="Markdown"
    )
    await callback.answer()

@router.callback_query(F.data == "achievements")
@handle_errors
async def achievements(callback: CallbackQuery):
    """Show user achievements"""
    await callback.message.edit_text(
        "üèÜ **–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è**\n\n"
        "üéâ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!** ‚úÖ\n"
        "*–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ PsychoDetective*\n\n"
        "üîí **–ü–µ—Ä–≤—ã–π –∞–Ω–∞–ª–∏–∑** ‚ùå\n"
        "*–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞*\n\n"
        "üîí **–ó–Ω–∞—Ç–æ–∫ –æ—Ç–Ω–æ—à–µ–Ω–∏–π** ‚ùå\n"
        "*–ü—Ä–æ–π–¥–∏—Ç–µ 5 —Ç–µ—Å—Ç–æ–≤ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏*\n\n"
        "üîí **–ú–∞—Å—Ç–µ—Ä –ø—Ä–æ—Ñ–∏–ª–µ–π** ‚ùå\n"
        "*–°–æ–∑–¥–∞–π—Ç–µ 3 –ø—Ä–æ—Ñ–∏–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤*",
        reply_markup=back_to_main_kb(),
        parse_mode="Markdown"
    )
    await callback.answer()

@router.callback_query(F.data == "settings")
@handle_errors
async def settings(callback: CallbackQuery):
    """Show user settings"""
    await callback.message.edit_text(
        "‚öôÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∏**\n\n"
        "üîî **–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:**\n"
        "‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Å–æ–≤–µ—Ç—ã\n"
        "‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ–± –∞–Ω–∞–ª–∏–∑–∞—Ö\n"
        "‚ùå –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n"
        "üåç **–Ø–∑—ã–∫:** –†—É—Å—Å–∫–∏–π\n"
        "‚è∞ **–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å:** UTC+3\n\n"
        "–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.",
        reply_markup=back_to_main_kb(),
        parse_mode="Markdown"
    )
    await callback.answer()

@router.callback_query(F.data == "subscription_menu")
@handle_errors
async def show_subscription_menu(callback: CallbackQuery):
    """Show subscription menu"""
    menu_text = """
üíé **–ü–æ–¥–ø–∏—Å–∫–∞**

–†–∞—Å—à–∏—Ä—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑–∞:

üíé **Premium** - –±–æ–ª—å—à–µ –∞–Ω–∞–ª–∏–∑–æ–≤ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
üëë **VIP** - –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –∞–Ω–∞–ª–∏–∑—ã –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
üí≥ **–ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É** - –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–ª–∞–Ω
üìã **–ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞** - —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å

–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?
"""
    
    await callback.message.edit_text(
        menu_text,
        reply_markup=subscription_menu_kb(),
        parse_mode="Markdown"
    )
    await callback.answer()

@router.callback_query(F.data == "premium_info")
@handle_errors
async def premium_info(callback: CallbackQuery):
    """Show Premium subscription info"""
    await callback.message.edit_text(
        "üíé **Premium –ø–æ–¥–ø–∏—Å–∫–∞**\n\n"
        "üí∞ **–¶–µ–Ω–∞:** 299‚ÇΩ/–º–µ—Å—è—Ü\n\n"
        "‚ú® **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**\n"
        "‚Ä¢ 50 –∞–Ω–∞–ª–∏–∑–æ–≤ –≤ –º–µ—Å—è—Ü\n"
        "‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã\n"
        "‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤\n"
        "‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n"
        "‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã\n\n"
        "üéØ –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
        reply_markup=back_to_main_kb(),
        parse_mode="Markdown"
    )
    await callback.answer()

@router.callback_query(F.data == "vip_info")
@handle_errors
async def vip_info(callback: CallbackQuery):
    """Show VIP subscription info"""
    await callback.message.edit_text(
        "üëë **VIP –ø–æ–¥–ø–∏—Å–∫–∞**\n\n"
        "üí∞ **–¶–µ–Ω–∞:** 599‚ÇΩ/–º–µ—Å—è—Ü\n\n"
        "üåü **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**\n"
        "‚Ä¢ –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –∞–Ω–∞–ª–∏–∑—ã\n"
        "‚Ä¢ AI-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n"
        "‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n"
        "‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç\n"
        "‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7\n"
        "‚Ä¢ –†–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º\n\n"
        "üëë –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Å–µ—Ä–≤–∏—Å–∞",
        reply_markup=back_to_main_kb(),
        parse_mode="Markdown"
    )
    await callback.answer()

@router.callback_query(F.data == "buy_subscription")
@handle_errors
async def buy_subscription(callback: CallbackQuery):
    """Handle subscription purchase"""
    await callback.message.edit_text(
        "üí≥ **–ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏**\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:\n\n"
        "üíé **Premium** - 299‚ÇΩ/–º–µ—Å—è—Ü\n"
        "üëë **VIP** - 599‚ÇΩ/–º–µ—Å—è—Ü\n\n"
        "üí≥ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:\n"
        "‚Ä¢ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞\n"
        "‚Ä¢ –ÆMoney\n"
        "‚Ä¢ –°–ë–ü\n\n"
        "–§—É–Ω–∫—Ü–∏—è –æ–ø–ª–∞—Ç—ã –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
        reply_markup=back_to_main_kb(),
        parse_mode="Markdown"
    )
    await callback.answer()

@router.callback_query(F.data == "my_subscription")
@handle_errors
async def my_subscription(callback: CallbackQuery):
    """Show current subscription"""
    await callback.message.edit_text(
        "üìã **–ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞**\n\n"
        "üìä **–¢–µ–∫—É—â–∏–π –ø–ª–∞–Ω:** Free\n"
        "üìÖ **–î–∞—Ç–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:** -\n"
        "‚è∞ **–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:** -\n"
        "üìà **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –∞–Ω–∞–ª–∏–∑–æ–≤:** 0/3\n\n"
        "üí° –û–±–Ω–æ–≤–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π!",
        reply_markup=back_to_main_kb(),
        parse_mode="Markdown"
    )
    await callback.answer()

@router.message(Command("myprofile"))
async def my_profile(message: Message):
    """Handle user profile command"""
    await message.answer("üë§ –§—É–Ω–∫—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–º –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...") 