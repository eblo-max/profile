#!/usr/bin/env python3
"""
–î–µ–±–∞–≥ —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ storytelling –ø—Ä–æ–º–ø—Ç–∞
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent))

from app.prompts.ultra_personalization_prompt import create_storytelling_analysis_prompt, create_simplified_system_prompt

def test_storytelling_prompt():
    """–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ storytelling –ø—Ä–æ–º–ø—Ç–∞"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_answers = """1. –ö–æ–Ω—Ç—Ä–æ–ª—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤
   –û—Ç–≤–µ—Ç: –î–∞, –æ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç –≤—Å–µ –º–æ–∏ –¥–µ–Ω—å–≥–∏

2. –ö—Ä–∏—Ç–∏–∫–∞ –≤–Ω–µ—à–Ω–æ—Å—Ç–∏
   –û—Ç–≤–µ—Ç: –î–∞, –æ–Ω –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∫—Ä–∏—Ç–∏–∫—É–µ—Ç –º–æ—é –≤–Ω–µ—à–Ω–æ—Å—Ç—å

3. –ò–∑–æ–ª—è—Ü–∏—è –æ—Ç –¥—Ä—É–∑–µ–π
   –û—Ç–≤–µ—Ç: –î–∞, –æ–Ω –∑–∞–ø—Ä–µ—â–∞–µ—Ç –º–Ω–µ –≤–∏–¥–µ—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏

4. –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —à–∞–Ω—Ç–∞–∂
   –û—Ç–≤–µ—Ç: –î–∞, –æ–Ω —É–≥—Ä–æ–∂–∞–µ—Ç —É–π—Ç–∏ –µ—Å–ª–∏ —è –Ω–µ –ø–æ–¥—á–∏–Ω—è—é—Å—å

5. –†–µ–≤–Ω–æ—Å—Ç—å
   –û—Ç–≤–µ—Ç: –î–∞, –æ–Ω –ø–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —Ä–µ–≤–Ω–∏–≤ –∫–æ –≤—Å–µ–º –º—É–∂—á–∏–Ω–∞–º"""
    
    partner_name = "–¢–µ—Å—Ç–æ–≤—ã–π –ü–∞—Ä—Ç–Ω–µ—Ä"
    partner_description = "–¢–µ—Å—Ç–æ–≤—ã–π —Å–ª—É—á–∞–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ storytelling"
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç
    user_prompt = create_storytelling_analysis_prompt(
        test_answers, partner_name, partner_description
    )
    
    system_prompt = create_simplified_system_prompt()
    
    print("=" * 80)
    print("üé≠ DEBUG: STORYTELLING PROMPT TEST")
    print("=" * 80)
    
    print(f"\nüìù SYSTEM PROMPT ({len(system_prompt)} chars):")
    print("-" * 50)
    print(system_prompt)
    print("-" * 50)
    
    print(f"\nüìù USER PROMPT ({len(user_prompt)} chars):")
    print("-" * 50)
    print(user_prompt)
    print("-" * 50)
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç
    print(f"\nüìä –ê–ù–ê–õ–ò–ó –ü–†–û–ú–ü–¢–ê:")
    print(f"   üìè –†–∞–∑–º–µ—Ä —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞: {len(system_prompt)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"   üìè –†–∞–∑–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞: {len(user_prompt)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"   üìè –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {len(system_prompt) + len(user_prompt)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    storytelling_keywords = [
        "storytelling", "–¥–∏–∞–ª–æ–≥–∏", "—Å—Ü–µ–Ω–∞—Ä–∏–∏", "–∂–∏–≤—ã–µ", "–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ",
        "–ø—Ä–∏–º–µ—Ä—ã", "—Ü–∏—Ç–∞—Ç—ã", "–º–µ—Ö–∞–Ω–∏–∑–º—ã", "–¥–µ—Ç–∞–ª—å–Ω—ã–µ", "–º–∏–Ω–∏–º—É–º 1000 —Å–ª–æ–≤"
    ]
    
    found_keywords = []
    for keyword in storytelling_keywords:
        if keyword.lower() in user_prompt.lower():
            found_keywords.append(keyword)
    
    print(f"\nüîç –ù–ê–ô–î–ï–ù–ù–´–ï –ö–õ–Æ–ß–ï–í–´–ï –°–õ–û–í–ê:")
    for keyword in found_keywords:
        print(f"   ‚úÖ {keyword}")
    
    missing_keywords = [k for k in storytelling_keywords if k not in found_keywords]
    if missing_keywords:
        print(f"\n‚ùå –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–ï –ö–õ–Æ–ß–ï–í–´–ï –°–õ–û–í–ê:")
        for keyword in missing_keywords:
            print(f"   ‚ùå {keyword}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É JSON
    json_structure_check = [
        "psychological_profile", "personality_type", "red_flags",
        "personalized_insights", "behavioral_evidence", "manipulation_tactics"
    ]
    
    print(f"\nüìã –ü–†–û–í–ï–†–ö–ê JSON –°–¢–†–£–ö–¢–£–†–´:")
    for field in json_structure_check:
        if field in user_prompt:
            print(f"   ‚úÖ {field}")
        else:
            print(f"   ‚ùå {field}")
    
    print(f"\nüéØ –í–´–í–û–î–´:")
    if len(found_keywords) >= 8:
        print("   ‚úÖ –ü—Ä–æ–º–ø—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ storytelling –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π")
    else:
        print("   ‚ùå –ü—Ä–æ–º–ø—Ç –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ—Ç–∞–ª—å–Ω—ã–π –¥–ª—è storytelling")
    
    if len(user_prompt) >= 3000:
        print("   ‚úÖ –ü—Ä–æ–º–ø—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ—Ç–∞–ª—å–Ω—ã–π")
    else:
        print("   ‚ö†Ô∏è –ü—Ä–æ–º–ø—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ—Ç–∞–ª—å–Ω—ã–º")
    
    print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø—Ä–æ–º–ø—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã '–ø–ª–æ—Ö–æ' vs '—Ö–æ—Ä–æ—à–æ'")
    print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 1000 —Å–ª–æ–≤ –¥–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è")
    print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —É–∫–∞–∑–∞–Ω—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥–∏–∞–ª–æ–≥–æ–≤ –∏ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤")
    
    return user_prompt, system_prompt

if __name__ == "__main__":
    test_storytelling_prompt() 