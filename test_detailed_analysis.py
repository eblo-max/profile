"""
–¢–µ—Å—Ç –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –≤ —Å—Ç–∏–ª–µ –ø—Ä–∏–º–µ—Ä–∞
"""

import asyncio
import time
from app.services.ai_service import ai_service


def get_detailed_questionnaire():
    """–ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∞–Ω–∫–µ—Ç—É —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π"""
    return [
        {
            "question": "–ö–∞–∫ –≤–∞—à –ø–∞—Ä—Ç–Ω–µ—Ä —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –≤–∞—à–∏ —É—Å–ø–µ—Ö–∏ –Ω–∞ —Ä–∞–±–æ—Ç–µ –∏–ª–∏ –≤ —É—á–µ–±–µ?",
            "answer": "–ö–æ–≥–¥–∞ —è –ø–æ–ª—É—á–∏–ª–∞ –ø–æ–≤—ã—à–µ–Ω–∏–µ –Ω–∞ —Ä–∞–±–æ—Ç–µ, –æ–Ω —Å–Ω–∞—á–∞–ª–∞ –ø–æ–∑–¥—Ä–∞–≤–∏–ª –º–µ–Ω—è, –Ω–æ –ø–æ—Ç–æ–º —Å–∫–∞–∑–∞–ª: '–ù–∞–¥–µ—é—Å—å, —ç—Ç–æ –Ω–µ —Å–¥–µ–ª–∞–µ—Ç —Ç–µ–±—è —Å–ª–∏—à–∫–æ–º –≥–æ—Ä–¥–æ–π' –∏ '–ì–ª–∞–≤–Ω–æ–µ, —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞ –Ω–µ —Å—Ç–∞–ª–∞ –≤–∞–∂–Ω–µ–µ –Ω–∞—à–µ–π —Å–µ–º—å–∏'. –ö–æ–≥–¥–∞ –∫–æ–ª–ª–µ–≥–∏ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –æ—Ç–º–µ—Ç–∏—Ç—å –º–æ–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ, –æ–Ω —É—Å—Ç—Ä–æ–∏–ª —Å–∫–∞–Ω–¥–∞–ª, —Å–∫–∞–∑–∞–≤ —á—Ç–æ —è '–¥—É–º–∞—é —Ç–æ–ª—å–∫–æ –æ –∫–∞—Ä—å–µ—Ä–µ' –∏ '–∑–∞–±—ã–≤–∞—é –æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö'. –û–Ω –Ω–µ –º–æ–∂–µ—Ç –∏—Å–∫—Ä–µ–Ω–Ω–µ –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å—Å—è –º–æ–∏–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º."
        },
        {
            "question": "–ö–∞–∫ –æ–Ω –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –≤–∞—à–∏–º –¥—Ä—É–∑—å—è–º –∏ —Å–µ–º—å–µ?",
            "answer": "–û–Ω –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∫—Ä–∏—Ç–∏–∫—É–µ—Ç –º–æ–∏—Ö –¥—Ä—É–∑–µ–π. –ì–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ –õ–µ–Ω–∞ '–ø–ª–æ—Ö–æ –Ω–∞ –º–µ–Ω—è –≤–ª–∏—è–µ—Ç' –∏ '–∑–∞–≤–∏–¥—É–µ—Ç –Ω–∞—à–∏–º –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º'. –ü—Ä–æ –ø–æ–¥—Ä—É–≥—É –ú–∞—à—É —Å–∫–∞–∑–∞–ª, —á—Ç–æ –æ–Ω–∞ '—Å–ª–∏—à–∫–æ–º –Ω–µ–∑–∞–≤–∏—Å–∏–º–∞—è' –∏ '–¥–∞–µ—Ç –º–Ω–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã'. –° –º–æ–µ–π –º–∞–º–æ–π –≤–µ–∂–ª–∏–≤ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ, –Ω–æ –ø–æ—Ç–æ–º –≥–æ–≤–æ—Ä–∏—Ç: '–¢–≤–æ—è –º–∞–º–∞ —Å–ª–∏—à–∫–æ–º –≤–º–µ—à–∏–≤–∞–µ—Ç—Å—è –≤ –Ω–∞—à—É –∂–∏–∑–Ω—å' –∏ '–æ–Ω–∞ –º–µ–Ω—è –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç'. –Ø —Å—Ç–∞–ª–∞ —Ä–µ–∂–µ –≤–∏–¥–µ—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –µ–≥–æ –Ω–µ–¥–æ–≤–æ–ª—å—Å—Ç–≤–∞."
        },
        {
            "question": "–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥—è—Ç –≤–∞—à–∏ —Å—Å–æ—Ä—ã –∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã?",
            "answer": "–û–Ω –º–æ–∂–µ—Ç –ø–µ—Ä–µ–π—Ç–∏ –æ—Ç —Å–ø–æ–∫–æ–π–Ω–æ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –∫ –∫—Ä–∏–∫—É –∑–∞ —Å–µ–∫—É–Ω–¥—ã. –ö—Ä–∏—á–∏—Ç –æ—á–µ–Ω—å –≥—Ä–æ–º–∫–æ, –≥–æ–≤–æ—Ä–∏—Ç –æ–±–∏–¥–Ω—ã–µ –≤–µ—â–∏ —Ç–∏–ø–∞ '—Ç—ã –≥–ª—É–ø–∞—è' –∏–ª–∏ '—Ç—ã –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω–∏–º–∞–µ—à—å'. –ü–æ—Ç–æ–º –≤—Å–µ–≥–¥–∞ –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ —ç—Ç–æ —è –µ–≥–æ –¥–æ–≤–µ–ª–∞: '–ï—Å–ª–∏ –±—ã —Ç—ã –º–µ–Ω—è –Ω–µ –∑–ª–∏–ª–∞, —è –±—ã –Ω–µ –∫—Ä–∏—á–∞–ª'. –ü–æ—Å–ª–µ —Å—Å–æ—Ä—ã —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ—á–µ–Ω—å –º–∏–ª—ã–º, –¥–∞—Ä–∏—Ç —Ü–≤–µ—Ç—ã –∏ –≥–æ–≤–æ—Ä–∏—Ç '—è –ª—é–±–ª—é —Ç–µ–±—è –±–æ–ª—å—à–µ –∂–∏–∑–Ω–∏'. –ù–æ –µ—Å–ª–∏ —è –ø—ã—Ç–∞—é—Å—å –æ–±—Å—É–¥–∏—Ç—å –µ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –æ–Ω –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å —Å–æ –º–Ω–æ–π –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π."
        },
        {
            "question": "–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç –ª–∏ –æ–Ω –≤–∞—à–∏ —Ñ–∏–Ω–∞–Ω—Å—ã, —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –∏–ª–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ?",
            "answer": "–û–Ω –Ω–∞—Å—Ç–æ—è–ª, —á—Ç–æ–±—ã –≤—Å–µ –Ω–∞—à–∏ –¥–µ–Ω—å–≥–∏ –ª–µ–∂–∞–ª–∏ –Ω–∞ –µ–≥–æ –∫–∞—Ä—Ç–µ, –≥–æ–≤–æ—Ä–∏—Ç '—è –ª—É—á—à–µ —Ä–∞–∑–±–∏—Ä–∞—é—Å—å –≤ —Ñ–∏–Ω–∞–Ω—Å–∞—Ö'. –¢–µ–ø–µ—Ä—å —è –¥–æ–ª–∂–Ω–∞ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–∞–∂–µ –Ω–∞ –ø–æ–∫—É–ø–∫—É –∫–æ—Ñ–µ. –ß–∞—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –º–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω, –≥–æ–≤–æ—Ä–∏—Ç '–º–µ–∂–¥—É –Ω–∞–º–∏ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–µ–∫—Ä–µ—Ç–æ–≤'. –ï—Å–ª–∏ —è –∑–∞–¥–µ—Ä–∂–∏–≤–∞—é—Å—å –Ω–∞ —Ä–∞–±–æ—Ç–µ –∏–ª–∏ —Å –ø–æ–¥—Ä—É–≥–∞–º–∏, –∑–≤–æ–Ω–∏—Ç –∫–∞–∂–¥—ã–µ –ø–æ–ª—á–∞—Å–∞: '–ì–¥–µ —Ç—ã? –° –∫–µ–º? –ö–æ–≥–¥–∞ –±—É–¥–µ—à—å –¥–æ–º–∞?' –ì–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ —ç—Ç–æ –∑–∞–±–æ—Ç–∞, –Ω–æ –º–Ω–µ –Ω–µ–∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ."
        },
        {
            "question": "–ö–∞–∫ –æ–Ω —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –µ–≥–æ?",
            "answer": "–ö–æ–≥–¥–∞ —è –Ω–µ —Å–æ–≥–ª–∞—à–∞—é—Å—å —Å –Ω–∏–º, –æ–Ω –≥–æ–≤–æ—Ä–∏—Ç: '–¢—ã —Å–ª–∏—à–∫–æ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è, –Ω–µ –º–æ–∂–µ—à—å –º—ã—Å–ª–∏—Ç—å –ª–æ–≥–∏—á–µ—Å–∫–∏' –∏–ª–∏ '–¢—ã –∫–∞–∫ –º–∞–ª–µ–Ω—å–∫–∞—è –¥–µ–≤–æ—á–∫–∞, –Ω–µ –ø–æ–Ω–∏–º–∞–µ—à—å —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –≤–µ—â–µ–π'. –ï—Å–ª–∏ —è –ø—Ä–µ–¥–ª–∞–≥–∞—é —Å–≤–æ–∏ –∏–¥–µ–∏, –æ–Ω —Å–º–µ–µ—Ç—Å—è: '–≠—Ç–æ –≥–ª—É–ø–æ' –∏–ª–∏ '–¢—ã –Ω–µ —Ä–∞–∑–±–∏—Ä–∞–µ—à—å—Å—è –≤ —ç—Ç–æ–º'. –Ø —Å—Ç–∞–ª–∞ —Ä–µ–∂–µ –≤—ã—Å–∫–∞–∑—ã–≤–∞—Ç—å —Å–≤–æ–µ –º–Ω–µ–Ω–∏–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ —É—Å—Ç–∞–ª–∞ –æ—Ç –µ–≥–æ —Ä–µ–∞–∫—Ü–∏–π."
        },
        {
            "question": "–ë—ã–ª–∏ –ª–∏ —Å–ª—É—á–∞–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–≥—Ä–µ—Å—Å–∏–∏ –∏–ª–∏ —É–≥—Ä–æ–∑?",
            "answer": "–§–∏–∑–∏—á–µ—Å–∫–∏ –º–µ–Ω—è –Ω–µ –±–∏–ª, –Ω–æ –º–æ–∂–µ—Ç –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ —Å–∂–∞—Ç—å —Ä—É–∫—É –∏–ª–∏ —Ç–æ–ª–∫–Ω—É—Ç—å '–≤ —à—É—Ç–∫—É', –∫–æ–≥–¥–∞ –∑–ª–∏—Ç—Å—è. –û–¥–∏–Ω —Ä–∞–∑ –≤–æ –≤—Ä–µ–º—è —Å—Å–æ—Ä—ã —É–¥–∞—Ä–∏–ª –∫—É–ª–∞–∫–æ–º –ø–æ —Å—Ç–µ–Ω–µ —Ä—è–¥–æ–º —Å –º–æ–µ–π –≥–æ–ª–æ–≤–æ–π, —è –æ—á–µ–Ω—å –∏—Å–ø—É–≥–∞–ª–∞—Å—å. –û–Ω —Å–∫–∞–∑–∞–ª: '–Ø –∂–µ –Ω–µ —Ç–µ–±—è —É–¥–∞—Ä–∏–ª, —á—Ç–æ —Ç—ã –ø—Å–∏—Ö—É–µ—à—å'. –ò–Ω–æ–≥–¥–∞ –≥–æ–≤–æ—Ä–∏—Ç: '–Ø –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Ç—Ä–æ–Ω—É –∂–µ–Ω—â–∏–Ω—É', –Ω–æ –µ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –º–µ–Ω—è –ø—É–≥–∞–µ—Ç."
        },
        {
            "question": "–ö–∞–∫ –æ–Ω –≤–µ–¥–µ—Ç —Å–µ–±—è –≤ –æ–±—â–µ—Å—Ç–≤–µ –∏ –Ω–∞–µ–¥–∏–Ω–µ —Å –≤–∞–º–∏?",
            "answer": "–ù–∞ –ª—é–¥—è—Ö –æ–Ω —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –¥—Ä—É–≥–æ–π —á–µ–ª–æ–≤–µ–∫ - –æ–±–∞—è—Ç–µ–ª—å–Ω—ã–π, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π, –≥–∞–ª–∞–Ω—Ç–Ω—ã–π. –ù–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–µ –º–æ–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –≤—Å–µ –≥–æ–≤–æ—Ä–∏–ª–∏, –∫–∞–∫–æ–π —É –º–µ–Ω—è –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–µ–Ω—å. –û–Ω –ø–æ–º–æ–≥–∞–ª –º–Ω–µ —Å –ø–∞–ª—å—Ç–æ, –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è –∫–æ–ª–ª–µ–≥–∞–º–∏, —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–ª —Å–º–µ—à–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏. –ù–æ –≤ –º–∞—à–∏–Ω–µ –ø–æ –¥–æ—Ä–æ–≥–µ –¥–æ–º–æ–π —É—Å—Ç—Ä–æ–∏–ª —Å–∫–∞–Ω–¥–∞–ª: '–¢—ã —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–ª–∞ —Å –Ω–∞—á–∞–ª—å–Ω–∏–∫–æ–º' –∏ '–ó–∞—á–µ–º —Ç—ã —Å–º–µ—è–ª–∞—Å—å –Ω–∞–¥ –µ–≥–æ —à—É—Ç–∫–∞–º–∏?'"
        },
        {
            "question": "–ß—É–≤—Å—Ç–≤—É–µ—Ç–µ –ª–∏ –≤—ã —Å–µ–±—è —Å–≤–æ–±–æ–¥–Ω–æ–π –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö?",
            "answer": "–Ø –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ö–æ–∂—É –ø–æ —è–∏—á–Ω–æ–π —Å–∫–æ—Ä–ª—É–ø–µ, –±–æ—è—Å—å –µ–≥–æ —Ä–∞—Å—Å—Ç—Ä–æ–∏—Ç—å. –î—É–º–∞—é –æ –∫–∞–∂–¥–æ–º —Å–ª–æ–≤–µ, –∫–æ—Ç–æ—Ä–æ–µ –≥–æ–≤–æ—Ä—é. –°—Ç–∞–ª–∞ –æ—á–µ–Ω—å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ–π - –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é –æ —Ä–∞–±–æ—Ç–µ, –Ω–µ —É–ø–æ–º–∏–Ω–∞—é –¥—Ä—É–∑–µ–π, –Ω–µ –≤—ã—Ä–∞–∂–∞—é –Ω–µ—Å–æ–≥–ª–∞—Å–∏–µ. –û–Ω –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ –≤ —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö '–Ω—É–∂–Ω–æ –¥—É–º–∞—Ç—å –æ –ø–∞—Ä—Ç–Ω–µ—Ä–µ' –∏ '–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å —Å–≤–æ–∏–º–∏ –∂–µ–ª–∞–Ω–∏—è–º–∏ —Ä–∞–¥–∏ —Å–µ–º—å–∏'. –ù–æ —è —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ —Ç–µ—Ä—è—é —Å–µ–±—è."
        },
        {
            "question": "–ö–∞–∫ –æ–Ω –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∏–Ω—Ç–∏–º–Ω–æ—Å—Ç–∏ –∏ –≤–∞—à–∏–º –≥—Ä–∞–Ω–∏—Ü–∞–º?",
            "answer": "–û–Ω –º–æ–∂–µ—Ç —Å—Ä–µ–¥–∏ –Ω–æ—á–∏ —Ä–∞–∑–±—É–¥–∏—Ç—å –º–µ–Ω—è –¥–ª—è –±–ª–∏–∑–æ—Å—Ç–∏, –≥–æ–≤–æ—Ä–∏—Ç '–Ω–µ –º–æ–≥—É –∑–∞—Å–Ω—É—Ç—å' –∏–ª–∏ '—Å–æ—Å–∫—É—á–∏–ª—Å—è'. –ï—Å–ª–∏ —è –Ω–µ –≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏, –æ–±–∏–∂–∞–µ—Ç—Å—è –∏ —É—Ç—Ä–æ–º —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ö–æ–ª–æ–¥–Ω—É—é –≤–æ–π–Ω—É. –ì–æ–≤–æ—Ä–∏—Ç: '–ï—Å–ª–∏ —Ç—ã –º–µ–Ω—è –ª—é–±–∏—à—å, —Ç–æ –Ω–µ –±—É–¥–µ—à—å –æ—Ç–∫–∞–∑—ã–≤–∞—Ç—å' –∏–ª–∏ '–í—Å–µ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–µ –ø–∞—Ä—ã —Ç–∞–∫ –¥–µ–ª–∞—é—Ç'. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –±–ª–∏–∑–æ—Å—Ç—å –∫–∞–∫ –Ω–∞–≥—Ä–∞–¥—É - –ø–æ—Å–ª–µ —Å—Å–æ—Ä –æ—Ç—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è, –∞ –ø–æ—Ç–æ–º —Ç—Ä–µ–±—É–µ—Ç –±–ª–∏–∑–æ—Å—Ç–∏ –∫–∞–∫ '–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –ø—Ä–æ—â–µ–Ω–∏—è'."
        },
        {
            "question": "–ï—Å—Ç—å –ª–∏ —É –Ω–µ–≥–æ –¥–≤–æ–π–Ω—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –≤ –ø–æ–≤–µ–¥–µ–Ω–∏–∏?",
            "answer": "–î–∞, –æ—á–µ–Ω—å –º–Ω–æ–≥–æ. –û–Ω –º–æ–∂–µ—Ç –æ–ø–æ–∑–¥–∞—Ç—å –Ω–∞ —á–∞—Å –∏ —ç—Ç–æ '–≤–∞–∂–Ω—ã–µ –¥–µ–ª–∞', –Ω–æ –µ—Å–ª–∏ —è –æ–ø–∞–∑–¥—ã–≤–∞—é –Ω–∞ 10 –º–∏–Ω—É—Ç - —ç—Ç–æ '–Ω–µ—É–≤–∞–∂–µ–Ω–∏–µ'. –û–Ω –º–æ–∂–µ—Ç –∑–∞–±—ã—Ç—å –∫—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã –∏ —ç—Ç–æ '–º–µ–ª–æ—á–∏', –Ω–æ –µ—Å–ª–∏ —è –∑–∞–±—ã–≤–∞—é - —ç—Ç–æ '–±–µ–∑–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å'. –û–Ω –º–æ–∂–µ—Ç –≥—Ä—É–±–æ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å —Å–æ –º–Ω–æ–π, –Ω–æ –µ—Å–ª–∏ —è –æ—Ç–≤–µ—á–∞—é —Ç–µ–º –∂–µ —Ç–æ–Ω–æ–º, —Ç–æ —è '–∞–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è' –∏ '–Ω–µ—É—Ä–∞–≤–Ω–æ–≤–µ—à–µ–Ω–Ω–∞—è'."
        }
    ]


async def test_detailed_analysis():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É—é –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑...")
    
    questionnaire = get_detailed_questionnaire()
    
    print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤: {len(questionnaire)}")
    
    start_time = time.time()
    
    # –ê–Ω–∞–ª–∏–∑ —Å –Ω–æ–≤—ã–º–∏ –ø—Ä–æ–º–ø—Ç–∞–º–∏
    result = await ai_service.profile_partner(
        answers=questionnaire,
        user_id=999999,
        partner_name="–î–º–∏—Ç—Ä–∏–π",
        partner_description="–ú–æ–π –ø–∞—Ä–µ–Ω—å, 32 –≥–æ–¥–∞, —Ä–∞–±–æ—Ç–∞–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –≤ IT –∫–æ–º–ø–∞–Ω–∏–∏",
        use_cache=False
    )
    
    duration = time.time() - start_time
    
    print(f"‚úÖ –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ {duration:.2f} —Å–µ–∫—É–Ω–¥")
    print(f"üìä –û–±—â–∏–π —Ä–∏—Å–∫: {result.get('overall_risk_score', 0)}/100")
    print(f"üö© –ö—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏: {len(result.get('red_flags', []))}")
    print(f"‚ö†Ô∏è –£—Ä–æ–≤–µ–Ω—å —Å—Ä–æ—á–Ω–æ—Å—Ç–∏: {result.get('urgency_level', 'N/A')}")
    print(f"üéØ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result.get('confidence_level', 0)}%")
    
    # –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ä—Ç—Ä–µ—Ç–∞
    profile_text = result.get('psychological_profile', '')
    print(f"\nüìù –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø–æ—Ä—Ç—Ä–µ—Ç–∞:")
    print(f"–î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞: {len(profile_text)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤: {len(profile_text.split())}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ü–∏—Ç–∞—Ç –∏–∑ –æ—Ç–≤–µ—Ç–æ–≤
    quotes_found = 0
    test_quotes = [
        "–Ω–∞–¥–µ—é—Å—å, —ç—Ç–æ –Ω–µ —Å–¥–µ–ª–∞–µ—Ç —Ç–µ–±—è —Å–ª–∏—à–∫–æ–º –≥–æ—Ä–¥–æ–π",
        "–¥—É–º–∞—é —Ç–æ–ª—å–∫–æ –æ –∫–∞—Ä—å–µ—Ä–µ",
        "—Ç—ã —Å–ª–∏—à–∫–æ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è",
        "—è –∂–µ –Ω–µ —Ç–µ–±—è —É–¥–∞—Ä–∏–ª",
        "–º–µ–∂–¥—É –Ω–∞–º–∏ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–µ–∫—Ä–µ—Ç–æ–≤"
    ]
    
    for quote in test_quotes:
        if quote.lower() in profile_text.lower():
            quotes_found += 1
    
    print(f"üéØ –¶–∏—Ç–∞—Ç –∏–∑ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: {quotes_found}/{len(test_quotes)}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞
    print(f"\nüìÑ –ù–∞—á–∞–ª–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø–æ—Ä—Ç—Ä–µ—Ç–∞:")
    print("=" * 60)
    print(profile_text[:500] + "..." if len(profile_text) > 500 else profile_text)
    print("=" * 60)
    
    # –ü–û–õ–ù–´–ô –í–´–í–û–î –ü–û–†–¢–†–ï–¢–ê
    print(f"\nüìñ –ü–û–õ–ù–´–ô –ü–°–ò–•–û–õ–û–ì–ò–ß–ï–°–ö–ò–ô –ü–û–†–¢–†–ï–¢:")
    print("=" * 80)
    print(profile_text)
    print("=" * 80)
    
    # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    print(f"\nüîç –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∞–Ω–∞–ª–∏–∑–∞:")
    print(f"üö© –ö—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏ ({len(result.get('red_flags', []))}):")
    for i, flag in enumerate(result.get('red_flags', [])[:5], 1):
        print(f"  {i}. {flag}")
    
    print(f"\nüé≠ –¢–∞–∫—Ç–∏–∫–∏ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π ({len(result.get('manipulation_tactics', []))}):")
    for i, tactic in enumerate(result.get('manipulation_tactics', [])[:3], 1):
        print(f"  {i}. {tactic}")
    
    print(f"\n‚ö° –¢—Ä–∏–≥–≥–µ—Ä—ã —ç—Å–∫–∞–ª–∞—Ü–∏–∏ ({len(result.get('escalation_triggers', []))}):")
    for i, trigger in enumerate(result.get('escalation_triggers', [])[:3], 1):
        print(f"  {i}. {trigger}")
    
    print(f"\nüéØ –ú–µ—Ö–∞–Ω–∏–∑–º—ã –∫–æ–Ω—Ç—Ä–æ–ª—è ({len(result.get('control_mechanisms', []))}):")
    for i, mechanism in enumerate(result.get('control_mechanisms', [])[:3], 1):
        print(f"  {i}. {mechanism}")
    
    print(f"\nüåü –†–µ–∑—é–º–µ:")
    print(result.get('summary', 'N/A'))
    
    # –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞
    quality_score = 0
    
    # –î–ª–∏–Ω–∞ –∞–Ω–∞–ª–∏–∑–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–º)
    if len(profile_text) > 800:
        quality_score += 25
        print(f"‚úÖ –î–ª–∏–Ω–∞ –∞–Ω–∞–ª–∏–∑–∞: –û–¢–õ–ò–ß–ù–û ({len(profile_text)} —Å–∏–º–≤–æ–ª–æ–≤)")
    elif len(profile_text) > 400:
        quality_score += 15
        print(f"üü° –î–ª–∏–Ω–∞ –∞–Ω–∞–ª–∏–∑–∞: –•–û–†–û–®–û ({len(profile_text)} —Å–∏–º–≤–æ–ª–æ–≤)")
    else:
        quality_score += 5
        print(f"üî¥ –î–ª–∏–Ω–∞ –∞–Ω–∞–ª–∏–∑–∞: –ú–ê–õ–û ({len(profile_text)} —Å–∏–º–≤–æ–ª–æ–≤)")
    
    # –ù–∞–ª–∏—á–∏–µ —Ü–∏—Ç–∞—Ç (–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è)
    if quotes_found >= 3:
        quality_score += 25
        print(f"‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è: –û–¢–õ–ò–ß–ù–û ({quotes_found} —Ü–∏—Ç–∞—Ç)")
    elif quotes_found >= 1:
        quality_score += 15
        print(f"üü° –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è: –•–û–†–û–®–û ({quotes_found} —Ü–∏—Ç–∞—Ç)")
    else:
        quality_score += 0
        print(f"üî¥ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è: –ü–õ–û–•–û (–Ω–µ—Ç —Ü–∏—Ç–∞—Ç)")
    
    # –î–µ—Ç–µ–∫—Ü–∏—è —Ä–∏—Å–∫–æ–≤
    risk_score = result.get('overall_risk_score', 0)
    if risk_score > 70:
        quality_score += 25
        print(f"‚úÖ –î–µ—Ç–µ–∫—Ü–∏—è —Ä–∏—Å–∫–æ–≤: –û–¢–õ–ò–ß–ù–û ({risk_score}/100)")
    elif risk_score > 50:
        quality_score += 20
        print(f"üü° –î–µ—Ç–µ–∫—Ü–∏—è —Ä–∏—Å–∫–æ–≤: –•–û–†–û–®–û ({risk_score}/100)")
    else:
        quality_score += 10
        print(f"üî¥ –î–µ—Ç–µ–∫—Ü–∏—è —Ä–∏—Å–∫–æ–≤: –ù–ò–ó–ö–û ({risk_score}/100)")
    
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∞—Å–Ω—ã—Ö —Ñ–ª–∞–≥–æ–≤
    red_flags_count = len(result.get('red_flags', []))
    if red_flags_count >= 5:
        quality_score += 25
        print(f"‚úÖ –ö—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏: –û–¢–õ–ò–ß–ù–û ({red_flags_count} —Ñ–ª–∞–≥–æ–≤)")
    elif red_flags_count >= 3:
        quality_score += 15
        print(f"üü° –ö—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏: –•–û–†–û–®–û ({red_flags_count} —Ñ–ª–∞–≥–æ–≤)")
    else:
        quality_score += 5
        print(f"üî¥ –ö—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏: –ú–ê–õ–û ({red_flags_count} —Ñ–ª–∞–≥–æ–≤)")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∞–Ω–∞–ª–∏–∑–∞
    word_count = len(result['psychological_profile'].split())
    print(f"\nüìä –ê–ù–ê–õ–ò–ó –ö–ê–ß–ï–°–¢–í–ê:")
    print(f"–û–±—ä–µ–º –∞–Ω–∞–ª–∏–∑–∞: {len(result['psychological_profile'])} —Å–∏–º–≤–æ–ª–æ–≤ ({word_count} —Å–ª–æ–≤)")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∫ –æ–±—ä–µ–º—É
    if word_count >= 2000:
        print(f"‚úÖ –û–±—ä–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º (2000+ —Å–ª–æ–≤)")
        quality_score += 25
    elif word_count >= 1500:
        print(f"‚ö†Ô∏è –û–±—ä–µ–º –ø—Ä–∏–µ–º–ª–µ–º—ã–π, –Ω–æ –º–µ–Ω—å—à–µ —Ç—Ä–µ–±—É–µ–º–æ–≥–æ (1500+ —Å–ª–æ–≤)")
        quality_score += 15
    elif word_count >= 1000:
        print(f"‚ö†Ô∏è –û–±—ä–µ–º –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π (1000+ —Å–ª–æ–≤)")
        quality_score += 10
    else:
        print(f"‚ùå –û–±—ä–µ–º —Å–ª–∏—à–∫–æ–º –º–∞–ª (–º–µ–Ω–µ–µ 1000 —Å–ª–æ–≤)")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å —ç–º–æ–¥–∑–∏
    emoji_headers = ['üë§', 'üß†', 'üé≠', 'üéØ', 'üîÑ', 'üí≠', 'üíï', 'üë•', 'üîç']
    found_headers = 0
    for emoji in emoji_headers:
        if emoji in result['psychological_profile']:
            found_headers += 1
    
    print(f"–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å: {found_headers}/{len(emoji_headers)} —Ä–∞–∑–¥–µ–ª–æ–≤ –Ω–∞–π–¥–µ–Ω–æ")
    if found_headers >= 7:
        print("‚úÖ –•–æ—Ä–æ—à–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞")
        quality_score += 15
    elif found_headers >= 5:
        print("‚ö†Ô∏è –ü—Ä–∏–µ–º–ª–µ–º–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞")
        quality_score += 10
    else:
        print("‚ùå –ü–ª–æ—Ö–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –∏ –∏–º–µ–Ω
    example_names = ['–ê–Ω–Ω–∞', '–ú–∞—Ä–∏–Ω–∞', '–ï–ª–µ–Ω–∞', '–û–ª—å–≥–∞', '–°–≤–µ—Ç–ª–∞–Ω–∞', '–ò—Ä–∏–Ω–∞', '–ù–∞—Ç–∞–ª—å—è']
    found_names = 0
    for name in example_names:
        if name in result['psychological_profile']:
            found_names += 1
    
    print(f"–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã: {found_names} –∏–º–µ–Ω –Ω–∞–π–¥–µ–Ω–æ")
    if found_names >= 3:
        print("‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∏–º–µ—Ä–æ–≤")
        quality_score += 15
    elif found_names >= 1:
        print("‚ö†Ô∏è –ú–∞–ª–æ –ø—Ä–∏–º–µ—Ä–æ–≤")
        quality_score += 10
    else:
        print("‚ùå –ù–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—É—á–Ω—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤
    scientific_terms = ['–Ω–∞—Ä—Ü–∏—Å—Å–∏–∑–º', '–≥–∞–∑–ª–∞–π—Ç–∏–Ω–≥', '–º–∞–Ω–∏–ø—É–ª—è—Ü–∏—è', '–ø—Ä–æ–µ–∫—Ü–∏—è', '—Ç—Ä–∏–∞–¥–∞', '–¥–∏–∑—Ä–µ–≥—É–ª—è—Ü–∏—è']
    found_terms = 0
    for term in scientific_terms:
        if term.lower() in result['psychological_profile'].lower():
            found_terms += 1
    
    print(f"–ù–∞—É—á–Ω–æ—Å—Ç—å: {found_terms}/{len(scientific_terms)} —Ç–µ—Ä–º–∏–Ω–æ–≤ –Ω–∞–π–¥–µ–Ω–æ")
    if found_terms >= 4:
        print("‚úÖ –í—ã—Å–æ–∫–∞—è –Ω–∞—É—á–Ω–æ—Å—Ç—å")
        quality_score += 15
    elif found_terms >= 2:
        print("‚ö†Ô∏è –°—Ä–µ–¥–Ω—è—è –Ω–∞—É—á–Ω–æ—Å—Ç—å")
        quality_score += 10
    else:
        print("‚ùå –ù–∏–∑–∫–∞—è –Ω–∞—É—á–Ω–æ—Å—Ç—å")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–∏—Ç–∞—Ç –∏ –¥–∏–∞–ª–æ–≥–æ–≤
    quote_count = result['psychological_profile'].count('"')
    print(f"–¶–∏—Ç–∞—Ç—ã –∏ –¥–∏–∞–ª–æ–≥–∏: {quote_count} –∫–∞–≤—ã—á–µ–∫ –Ω–∞–π–¥–µ–Ω–æ")
    if quote_count >= 10:
        print("‚úÖ –ú–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–æ–≤ –∏ —Ü–∏—Ç–∞—Ç")
        quality_score += 15
    elif quote_count >= 5:
        print("‚ö†Ô∏è –ï—Å—Ç—å –¥–∏–∞–ª–æ–≥–∏ –∏ —Ü–∏—Ç–∞—Ç—ã")
        quality_score += 10
    else:
        print("‚ùå –ú–∞–ª–æ –¥–∏–∞–ª–æ–≥–æ–≤ –∏ —Ü–∏—Ç–∞—Ç")
    
    print(f"\nüìä –û–ë–©–ê–Ø –û–¶–ï–ù–ö–ê –ö–ê–ß–ï–°–¢–í–ê: {quality_score}/160")
    
    if quality_score >= 130:
        print("üü¢ –ö–ê–ß–ï–°–¢–í–û: –û–¢–õ–ò–ß–ù–û - –î–µ—Ç–∞–ª—å–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑")
    elif quality_score >= 100:
        print("üü° –ö–ê–ß–ï–°–¢–í–û: –•–û–†–û–®–û - –ù—É–∂–Ω—ã –Ω–µ–±–æ–ª—å—à–∏–µ —É–ª—É—á—à–µ–Ω–∏—è")
    else:
        print("üî¥ –ö–ê–ß–ï–°–¢–í–û: –¢–†–ï–ë–£–ï–¢ –î–û–†–ê–ë–û–¢–ö–ò")
    
    return result, quality_score


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–ï–¢–ê–õ–¨–ù–û–ì–û –ü–°–ò–•–û–õ–û–ì–ò–ß–ï–°–ö–û–ì–û –ê–ù–ê–õ–ò–ó–ê")
    print("=" * 70)
    
    try:
        result, quality_score = await test_detailed_analysis()
        
        print("\n" + "=" * 70)
        print("üìä –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –î–ï–¢–ê–õ–¨–ù–û–ì–û –ê–ù–ê–õ–ò–ó–ê")
        print("=" * 70)
        
        if quality_score >= 130:
            print("üéâ –û–¢–õ–ò–ß–ù–û! –°–∏—Å—Ç–µ–º–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Ä—Ç—Ä–µ—Ç—ã")
            print("‚úÖ –ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ —Å—Ç–∏–ª–µ –ø—Ä–∏–º–µ—Ä–∞")
        elif quality_score >= 100:
            print("üü° –•–û–†–û–®–û! –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –Ω—É–∂–Ω—ã –¥–æ—Ä–∞–±–æ—Ç–∫–∏")
            print("‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–ª—É—á—à–∏—Ç—å –ø—Ä–æ–º–ø—Ç—ã")
        else:
            print("üî¥ –¢–†–ï–ë–£–ï–¢ –î–û–†–ê–ë–û–¢–ö–ò! –ê–Ω–∞–ª–∏–∑ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ—Ç–∞–ª—å–Ω—ã–π")
            print("‚ùå –ù—É–∂–Ω–æ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–æ–º–ø—Ç—ã")
        
        print(f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ~$0.12 (—É–≤–µ–ª–∏—á–µ–Ω–∞ –∏–∑-–∑–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞)")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(main()) 