#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç storytelling —Ç–µ—Ö–Ω–∏–∫–∏
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤ –±–µ–∑ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent))

from app.services.ai_service import AIService

async def quick_storytelling_test():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç storytelling —Ç–µ—Ö–Ω–∏–∫–∏"""
    print("‚ö° –ë–´–°–¢–†–´–ô –¢–ï–°–¢ STORYTELLING –¢–ï–•–ù–ò–ö–ò")
    print("=" * 50)
    
    ai_service = AIService()
    
    # –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –Ω–∞ –≤—ã—Å–æ–∫–æ–º —Ä–∏—Å–∫–µ
    test_answers = [
        {"question": "–ö–æ–Ω—Ç—Ä–æ–ª—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤", "answer": "–î–∞, –æ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç –≤—Å–µ –º–æ–∏ –¥–µ–Ω—å–≥–∏"},
        {"question": "–ö—Ä–∏—Ç–∏–∫–∞", "answer": "–î–∞, –æ–Ω –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∫—Ä–∏—Ç–∏–∫—É–µ—Ç –º–æ—é –≤–Ω–µ—à–Ω–æ—Å—Ç—å"},
        {"question": "–ò–∑–æ–ª—è—Ü–∏—è", "answer": "–î–∞, –æ–Ω –∑–∞–ø—Ä–µ—â–∞–µ—Ç –º–Ω–µ –≤–∏–¥–µ—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏"},
        {"question": "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —à–∞–Ω—Ç–∞–∂", "answer": "–î–∞, –æ–Ω —É–≥—Ä–æ–∂–∞–µ—Ç —É–π—Ç–∏ –µ—Å–ª–∏ —è –Ω–µ –ø–æ–¥—á–∏–Ω—è—é—Å—å"},
        {"question": "–†–µ–≤–Ω–æ—Å—Ç—å", "answer": "–î–∞, –æ–Ω –ø–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —Ä–µ–≤–Ω–∏–≤ –∫–æ –≤—Å–µ–º –º—É–∂—á–∏–Ω–∞–º"}
    ]
    
    print("üß† –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∞–Ω–∞–ª–∏–∑ —Å storytelling —Ç–µ—Ö–Ω–∏–∫–æ–π...")
    
    try:
        # –¢–µ—Å—Ç storytelling —Ç–µ—Ö–Ω–∏–∫–∏
        analysis = await ai_service.profile_partner_advanced(
            answers=test_answers,
            user_id=999,
            partner_name="–¢–µ—Å—Ç–æ–≤—ã–π –ü–∞—Ä—Ç–Ω–µ—Ä",
            partner_description="–¢–µ—Å—Ç–æ–≤—ã–π —Å–ª—É—á–∞–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ storytelling",
            technique="storytelling",
            use_cache=False
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        profile_text = analysis.get("psychological_profile", "")
        
        print(f"‚úÖ –ê–Ω–∞–ª–∏–∑ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")
        print(f"üìä –†–∞–∑–º–µ—Ä: {len(profile_text)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ–≤
        if isinstance(profile_text, str):
            word_count = len(profile_text.split())
            print(f"üìä –°–ª–æ–≤: {word_count} —Å–ª–æ–≤")
        else:
            word_count = 0
            print(f"üìä –°–ª–æ–≤: ERROR - profile_text –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π: {type(profile_text)}")
            print(f"üìä –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {profile_text}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ storytelling
        print("\nüé≠ –ê–ù–ê–õ–ò–ó –ö–ê–ß–ï–°–¢–í–ê STORYTELLING:")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∏–∞–ª–æ–≥–æ–≤
        has_dialogue = any(marker in profile_text for marker in ['"', '¬´', '¬ª', "–≥–æ–≤–æ—Ä–∏—Ç", "—Å–∫–∞–∑–∞–ª"])
        print(f"   üì¢ –î–∏–∞–ª–æ–≥–∏: {'‚úÖ' if has_dialogue else '‚ùå'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
        has_scenarios = any(marker in profile_text.lower() for marker in ["–∫–æ–≥–¥–∞", "–Ω–∞–ø—Ä–∏–º–µ—Ä", "—Å–∏—Ç—É–∞—Ü–∏—è"])
        print(f"   üé¨ –°—Ü–µ–Ω–∞—Ä–∏–∏: {'‚úÖ' if has_scenarios else '‚ùå'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
        has_emotions = any(marker in profile_text.lower() for marker in ["—á—É–≤—Å—Ç–≤—É–µ—Ç", "–∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç", "–ø–µ—Ä–µ–∂–∏–≤–∞–µ—Ç"])
        print(f"   üòä –≠–º–æ—Ü–∏–∏: {'‚úÖ' if has_emotions else '‚ùå'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–∏
        has_name = "–¢–µ—Å—Ç–æ–≤—ã–π –ü–∞—Ä—Ç–Ω–µ—Ä" in profile_text
        print(f"   üë§ –ò–º—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞: {'‚úÖ' if has_name else '‚ùå'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é (1000+ —Å–ª–æ–≤)
        if isinstance(profile_text, str):
            is_detailed = len(profile_text.split()) >= 1000
        else:
            is_detailed = False
        print(f"   üìù –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è: {'‚úÖ' if is_detailed else '‚ùå'}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–≤—å—é
        print(f"\nüìñ –ü–†–ï–í–¨–Æ –ê–ù–ê–õ–ò–ó–ê (–ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤):")
        print("-" * 50)
        print(profile_text[:500])
        if len(profile_text) > 500:
            print("...")
        print("-" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ —Å—Ç–∞—Ç–∏—á–Ω—ã–π —à–∞–±–ª–æ–Ω
        is_dynamic = "—Å—Ç–∞—Ç–∏—á–Ω—ã–π" not in profile_text.lower() and "—à–∞–±–ª–æ–Ω" not in profile_text.lower()
        print(f"\nüîÑ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç: {'‚úÖ' if is_dynamic else '‚ùå'}")
        
        # –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞
        quality_score = sum([has_dialogue, has_scenarios, has_emotions, has_name, is_detailed, is_dynamic])
        print(f"\nüéØ –û–ë–©–ê–Ø –û–¶–ï–ù–ö–ê: {quality_score}/6")
        
        if quality_score >= 5:
            print("üéâ –û–¢–õ–ò–ß–ù–û! Storytelling —Ç–µ—Ö–Ω–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        elif quality_score >= 3:
            print("‚ö†Ô∏è –•–û–†–û–®–û, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã")
        else:
            print("‚ùå –ü–õ–û–•–û! Storytelling —Ç–µ—Ö–Ω–∏–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            
        print(f"\nüìä –î–ï–¢–ê–õ–ò:")
        if isinstance(profile_text, str):
            print(f"   –°–ª–æ–≤ –≤ –ø—Ä–æ—Ñ–∏–ª–µ: {len(profile_text.split())}")
            print(f"   –°–∏–º–≤–æ–ª–æ–≤ –≤ –ø—Ä–æ—Ñ–∏–ª–µ: {len(profile_text)}")
        else:
            print(f"   –°–ª–æ–≤ –≤ –ø—Ä–æ—Ñ–∏–ª–µ: ERROR - –Ω–µ —Å—Ç—Ä–æ–∫–∞")
            print(f"   –°–∏–º–≤–æ–ª–æ–≤ –≤ –ø—Ä–æ—Ñ–∏–ª–µ: ERROR - –Ω–µ —Å—Ç—Ä–æ–∫–∞")
        print(f"   –¢—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º: 1000 —Å–ª–æ–≤")
        print(f"   –û–∂–∏–¥–∞–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º: ~5000 —Å–∏–º–≤–æ–ª–æ–≤")
            
        return analysis
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        return None

if __name__ == "__main__":
    asyncio.run(quick_storytelling_test()) 