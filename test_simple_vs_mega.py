#!/usr/bin/env python3

import asyncio
import os
import sys
import time
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.core.database import init_db
from app.core.redis import init_redis
from app.services.ai_service import AIService

async def test_simple_vs_mega():
    """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ Simple –∏ Mega —Ä–µ–∂–∏–º–æ–≤"""
    
    print("üß™ –¢–µ—Å—Ç: Simple vs Mega —Ä–µ–∂–∏–º—ã")
    print("üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏, —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ –∫–∞—á–µ—Å—Ç–≤–∞\n")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    await init_db()
    await init_redis()
    
    ai_service = AIService()
    
    # –¢–µ—Å—Ç–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞
    test_answers = [
        {
            "question": "–ö–∞–∫ –ø—Ä–æ–≤–æ–¥–∏—Ç–µ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è?",
            "answer": "–ß–∏—Ç–∞—é –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∫–Ω–∏–≥–∏, —Ö–æ–∂—É –≤ —Ç–µ–∞—Ç—Ä, –≤—Å—Ç—Ä–µ—á–∞—é—Å—å —Å –¥—Ä—É–∑—å—è–º–∏"
        },
        {
            "question": "–ß—Ç–æ —Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç –≤ –ª—é–¥—è—Ö?",
            "answer": "–ù–µ–∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å, –ª–∏—Ü–µ–º–µ—Ä–∏–µ, –ø–æ–ø—ã—Ç–∫–∏ –º–∞–Ω–∏–ø—É–ª–∏—Ä–æ–≤–∞—Ç—å"
        },
        {
            "question": "–ö–∞–∫ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç–µ –Ω–∞ –∫—Ä–∏—Ç–∏–∫—É?",
            "answer": "–°–Ω–∞—á–∞–ª–∞ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞—é—Å—å, –ø–æ—Ç–æ–º –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏ –¥–µ–ª–∞—é –≤—ã–≤–æ–¥—ã"
        },
        {
            "question": "–ü–ª–∞–Ω—ã –Ω–∞ –±—É–¥—É—â–µ–µ?",
            "answer": "–†–∞–∑–≤–∏—Ç–∏–µ –≤ –∫–∞—Ä—å–µ—Ä–µ, –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è, —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ–º—å–∏"
        }
    ]
    
    try:
        # –¢–µ—Å—Ç Simple —Ä–µ–∂–∏–º–∞
        print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º SIMPLE —Ä–µ–∂–∏–º...")
        start_time = time.time()
        
        simple_result = await ai_service.profile_partner(
            answers=test_answers,
            user_id=12345,
            partner_name="–ê–Ω–Ω–∞",
            partner_description="–î–µ–≤—É—à–∫–∞ 28 –ª–µ—Ç, –ø—Å–∏—Ö–æ–ª–æ–≥",
            analysis_mode="simple"
        )
        
        simple_time = time.time() - start_time
        
        print(f"‚úÖ SIMPLE –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ {simple_time:.1f}—Å")
        print(f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ~${simple_result.get('cost_estimate', 0):.2f}")
        print(f"‚ö†Ô∏è –†–∏—Å–∫: {simple_result.get('overall_risk_score', 0)}/100")
        print(f"üß† –ü—Ä–æ—Ñ–∏–ª—å: {simple_result.get('psychological_profile', 'N/A')[:100]}...")
        print(f"üéØ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {simple_result.get('confidence_level', 0)}%")
        
        print("\n" + "="*60 + "\n")
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç
        print("üìä –ò–¢–û–ì–ò –ì–ò–ë–†–ò–î–ù–û–ì–û –†–ï–ñ–ò–ú–ê:")
        print("="*60)
        print(f"{'–†–µ–∂–∏–º':<12} | {'–í—Ä–µ–º—è':<8} | {'–°—Ç–æ–∏–º–æ—Å—Ç—å':<10} | {'–ö–∞—á–µ—Å—Ç–≤–æ'}")
        print("-" * 60)
        print(f"{'SIMPLE':<12} | {simple_time:>6.1f}—Å | ${simple_result.get('cost_estimate', 0):>8.2f} | {simple_result.get('confidence_level', 0):>6.0f}%")
        print(f"{'MEGA':<12} | {'300+—Å':<8} | {'$0.45':<10} | {'95%+'}")
        
        print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("‚Ä¢ üì± Simple —Ä–µ–∂–∏–º: –ë—ã—Å—Ç—Ä—ã–µ –æ—Ü–µ–Ω–∫–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        print("‚Ä¢ üéØ Mega —Ä–µ–∂–∏–º: –î–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –¥–ª—è –ø—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("‚Ä¢ ü§ñ Auto —Ä–µ–∂–∏–º: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –≤–æ–ø—Ä–æ—Å–æ–≤")
        
        print("\nüéâ –ì–∏–±—Ä–∏–¥–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("üöÄ Claude Sonnet 4 –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ç–ª–∏—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    asyncio.run(test_simple_vs_mega()) 