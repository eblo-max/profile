#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π Claude
"""

import asyncio
from anthropic import AsyncAnthropic
from app.core.config import settings

async def check_models():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏"""
    
    client = AsyncAnthropic(api_key=settings.CLAUDE_API_KEY)
    
    # –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    models_to_test = [
        "claude-3-5-sonnet-20241022",      # –¢–µ–∫—É—â–∞—è —Ä–∞–±–æ—á–∞—è
        "claude-3-7-sonnet-20250201",      # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–∞—è 3.7
        "claude-3-5-sonnet-20250115",      # –í–æ–∑–º–æ–∂–Ω–∞—è –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è
        "claude-3-haiku-20240307",
        "claude-3-opus-20240229",
        "claude-3-sonnet-20240229"
    ]
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–´–• –ú–û–î–ï–õ–ï–ô CLAUDE")
    print("=" * 50)
    
    for model in models_to_test:
        try:
            response = await client.messages.create(
                model=model,
                max_tokens=10,
                messages=[{"role": "user", "content": "test"}]
            )
            print(f"‚úÖ {model} - –†–ê–ë–û–¢–ê–ï–¢")
        except Exception as e:
            if "not_found_error" in str(e):
                print(f"‚ùå {model} - –ù–ï –ù–ê–ô–î–ï–ù–ê")
            else:
                print(f"‚ö†Ô∏è  {model} - –û–®–ò–ë–ö–ê: {str(e)[:100]}")
    
    print("\n" + "=" * 50)
    print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:")
    print("–ò—Å–ø–æ–ª—å–∑—É–π claude-3-5-sonnet-20241022 —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏")
    print("Claude 3.7 –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑ API")

if __name__ == "__main__":
    asyncio.run(check_models()) 