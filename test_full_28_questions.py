import asyncio
import random
from app.services.ai_service import AIService
from app.core.config import settings
import time

def get_full_questionnaire():
    """Возвращает полную анкету из 28 вопросов"""
    return {
        "q1": {
            "question": "Как ваш партнер реагирует на ваши успехи на работе или в учебе?",
            "options": [
                "Искренне радуется и поддерживает меня",
                "Сначала поздравляет, но потом находит что-то негативное",
                "Переводит разговор на себя и свои достижения",
                "Принижает важность моих успехов",
                "Обвиняет меня в том, что я мало времени уделяю отношениям"
            ]
        },
        "q2": {
            "question": "Как он относится к вашим друзьям и семье?",
            "options": [
                "Хорошо ладит со всеми и поддерживает мои отношения",
                "Терпит их, но иногда критикует",
                "Находит недостатки в каждом из них",
                "Активно настраивает меня против близких",
                "Запрещает или ограничивает общение с ними"
            ]
        },
        "q3": {
            "question": "Как он контролирует ваши финансы?",
            "options": [
                "Мы совместно планируем бюджет и принимаем решения",
                "Он дает советы, но окончательное решение за мной",
                "Настаивает на том, чтобы знать все мои траты",
                "Требует отчета за каждую покупку",
                "Полностью контролирует деньги, я должна просить на расходы"
            ]
        },
        "q4": {
            "question": "Как часто он проверяет ваш телефон, социальные сети или переписку?",
            "options": [
                "Никогда, полностью доверяет мне",
                "Иногда просит показать что-то конкретное",
                "Регулярно просматривает мои сообщения",
                "Требует пароли от всех аккаунтов",
                "Постоянно следит за моей онлайн-активностью"
            ]
        },
        "q5": {
            "question": "Как он ведет себя во время конфликтов?",
            "options": [
                "Спокойно обсуждает проблему и ищет решение",
                "Повышает голос, но потом извиняется",
                "Кричит и обвиняет меня во всем",
                "Оскорбляет и унижает меня",
                "Может угрожать или проявлять агрессию"
            ]
        },
        "q6": {
            "question": "Как он реагирует на ваши просьбы о личном времени или пространстве?",
            "options": [
                "Понимает и уважает мою потребность в одиночестве",
                "Соглашается, но иногда обижается",
                "Воспринимает как отвержение и устраивает сцены",
                "Обвиняет меня в холодности и эгоизме",
                "Категорически не принимает и преследует меня"
            ]
        },
        "q7": {
            "question": "Как он относится к вашим увлечениям и хобби?",
            "options": [
                "Поддерживает и интересуется моими занятиями",
                "Не мешает, но особого интереса не проявляет",
                "Считает мои увлечения глупыми или бесполезными",
                "Требует, чтобы я тратила время только на него",
                "Запрещает заниматься тем, что мне нравится"
            ]
        },
        "q8": {
            "question": "Как он ведет себя в обществе по сравнению с поведением наедине?",
            "options": [
                "Одинаково уважительно и в публичных местах, и дома",
                "Немного более сдержанный на публике",
                "Кардинально меняется - мил с другими, груб со мной",
                "Демонстративно показывает свое превосходство надо мной",
                "Унижает меня даже при посторонних"
            ]
        },
        "q9": {
            "question": "Как он реагирует на критику или замечания с вашей стороны?",
            "options": [
                "Выслушивает и готов обсуждать проблемы",
                "Защищается, но может признать правоту",
                "Агрессивно отвергает любую критику",
                "Переворачивает ситуацию и обвиняет меня",
                "Наказывает меня за попытки что-то обсудить"
            ]
        },
        "q10": {
            "question": "Как он относится к вашей работе и карьере?",
            "options": [
                "Поддерживает мои профессиональные цели",
                "Интересуется, но иногда ревнует к коллегам",
                "Считает мою работу менее важной, чем свою",
                "Требует, чтобы я уволилась или работала меньше",
                "Саботирует мою карьеру и профессиональные отношения"
            ]
        },
        "q11": {
            "question": "Как он выражает свою любовь и привязанность?",
            "options": [
                "Словами поддержки и заботливыми поступками",
                "Подарками и физической близостью",
                "Требует постоянных доказательств моей любви",
                "Использует близость как способ контроля",
                "Любовь зависит от моего 'хорошего' поведения"
            ]
        },
        "q12": {
            "question": "Как он реагирует на ваше 'нет' в интимных вопросах?",
            "options": [
                "Уважает мои границы без вопросов",
                "Расстраивается, но принимает мое решение",
                "Обижается и дает понять, что я плохая партнерша",
                "Принуждает через чувство вины или шантаж",
                "Игнорирует мой отказ и настаивает на своем"
            ]
        },
        "q13": {
            "question": "Как он относится к вашим эмоциям и переживаниям?",
            "options": [
                "Внимательно выслушивает и поддерживает",
                "Пытается помочь, но не всегда понимает",
                "Считает мои эмоции преувеличенными",
                "Обвиняет меня в излишней чувствительности",
                "Полностью игнорирует или высмеивает мои чувства"
            ]
        },
        "q14": {
            "question": "Как он планирует общее будущее?",
            "options": [
                "Обсуждает планы со мной как с равным партнером",
                "Учитывает мое мнение при принятии решений",
                "Принимает решения единолично, но информирует меня",
                "Планирует будущее только исходя из своих потребностей",
                "Использует планы как способ еще больше контролировать меня"
            ]
        },
        "q15": {
            "question": "Как он ведет себя, когда вы болеете или нуждаетесь в поддержке?",
            "options": [
                "Заботится и помогает всем, чем может",
                "Старается помочь, но может проявлять нетерпение",
                "Раздражается из-за неудобств для себя",
                "Обвиняет меня в притворстве или преувеличении",
                "Игнорирует мои потребности или использует против меня"
            ]
        },
        "q16": {
            "question": "Как он относится к вашим достижениям и талантам?",
            "options": [
                "Гордится мной и хвастается моими успехами",
                "Радуется, но иногда чувствует себя неуверенно",
                "Принижает значимость моих достижений",
                "Ревнует и пытается конкурировать со мной",
                "Активно препятствует моему развитию и успеху"
            ]
        },
        "q17": {
            "question": "Как он реагирует на ваши просьбы о помощи?",
            "options": [
                "Охотно помогает и поддерживает",
                "Помогает, но иногда с неохотой",
                "Помогает только если это выгодно ему",
                "Отказывается помогать и обвиняет в беспомощности",
                "Использует мои просьбы как повод для контроля"
            ]
        },
        "q18": {
            "question": "Как он относится к вашим границам и личному пространству?",
            "options": [
                "Полностью уважает мои границы",
                "Понимает границы, но иногда их нарушает",
                "Считает границы признаком недоверия",
                "Игнорирует мои границы и называет их эгоизмом",
                "Агрессивно разрушает любые попытки установить границы"
            ]
        },
        "q19": {
            "question": "Как он ведет себя после ссор и конфликтов?",
            "options": [
                "Извиняется и работает над решением проблемы",
                "Извиняется, но может повторить то же самое",
                "Делает вид, что ничего не произошло",
                "Обвиняет меня в том, что я довела его до этого",
                "Наказывает меня холодностью или агрессией"
            ]
        },
        "q20": {
            "question": "Как он относится к вашим мнениям и решениям?",
            "options": [
                "Уважает мои взгляды, даже если не согласен",
                "Выслушивает, но пытается переубедить",
                "Считает свое мнение единственно правильным",
                "Высмеивает мои взгляды и решения",
                "Запрещает мне иметь собственное мнение"
            ]
        },
        "q21": {
            "question": "Как он реагирует на ваши слезы или эмоциональные проявления?",
            "options": [
                "Утешает и пытается понять причину",
                "Обнимает, но чувствует себя неловко",
                "Раздражается и просит прекратить",
                "Обвиняет меня в манипуляциях и истериках",
                "Злится еще больше и может стать агрессивным"
            ]
        },
        "q22": {
            "question": "Как он относится к вашим отношениям с противоположным полом?",
            "options": [
                "Доверяет мне и не ревнует без причины",
                "Иногда ревнует, но контролирует себя",
                "Подозрительно относится к моим знакомым",
                "Запрещает общаться с представителями противоположного пола",
                "Обвиняет меня в измене без каких-либо оснований"
            ]
        },
        "q23": {
            "question": "Как он использует информацию о ваших слабостях и страхах?",
            "options": [
                "Помогает мне справляться с трудностями",
                "Иногда может неосторожно затронуть болезненную тему",
                "Использует мои слабости в спорах против меня",
                "Целенаправленно давит на болевые точки",
                "Угрожает использовать мои секреты против меня"
            ]
        },
        "q24": {
            "question": "Как он относится к вашим родителям и семье?",
            "options": [
                "Уважает их и поддерживает хорошие отношения",
                "Вежлив, но держится на расстоянии",
                "Критикует их и ищет недостатки",
                "Настраивает меня против семьи",
                "Запрещает или ограничивает общение с родными"
            ]
        },
        "q25": {
            "question": "Как он реагирует на ваши попытки изменить что-то в отношениях?",
            "options": [
                "Открыт к обсуждению и готов работать над отношениями",
                "Выслушивает, но не всегда готов меняться",
                "Защищается и отвергает необходимость изменений",
                "Обвиняет меня в том, что я его не принимаю",
                "Наказывает за попытки что-то изменить"
            ]
        },
        "q26": {
            "question": "Как он относится к вашей независимости и самостоятельности?",
            "options": [
                "Поддерживает мою независимость и самостоятельность",
                "Ценит, но иногда хочет быть более нужным",
                "Считает мою независимость угрозой отношениям",
                "Активно подрывает мою самостоятельность",
                "Требует полной зависимости от него"
            ]
        },
        "q27": {
            "question": "Как он ведет себя в стрессовых ситуациях?",
            "options": [
                "Сохраняет спокойствие и ищет решения",
                "Нервничает, но старается контролировать себя",
                "Становится раздражительным и срывается на мне",
                "Обвиняет меня в своих проблемах и стрессе",
                "Становится агрессивным и непредсказуемым"
            ]
        },
        "q28": {
            "question": "Как он относится к вашим потребностям в отношениях?",
            "options": [
                "Внимательно выслушивает и старается их удовлетворить",
                "Учитывает мои потребности, но приоритет отдает своим",
                "Считает мои потребности менее важными",
                "Игнорирует мои потребности и называет их капризами",
                "Наказывает меня за попытки выразить свои потребности"
            ]
        }
    }

def generate_random_answers():
    """Генерирует случайные ответы на все 28 вопросов"""
    questionnaire = get_full_questionnaire()
    answers = []
    
    # Генерируем случайные ответы с уклоном в токсичность для интересного анализа
    for q_id, q_data in questionnaire.items():
        # Создаем весовые коэффициенты - больше вероятность выбрать токсичные варианты
        weights = [0.1, 0.2, 0.3, 0.25, 0.15]  # Больше веса на 3-5 варианты (токсичные)
        
        selected_index = random.choices(range(len(q_data["options"])), weights=weights)[0]
        selected_answer = q_data["options"][selected_index]
        
        answers.append({
            "question": q_data["question"],
            "answer": selected_answer,
            "question_id": q_id,
            "toxicity_level": selected_index + 1  # 1-5 уровень токсичности
        })
    
    return answers

def generate_partner_profile():
    """Генерирует случайный профиль партнера"""
    names = ["Алексей", "Дмитрий", "Андрей", "Сергей", "Максим", "Игорь", "Владимир", "Николай"]
    ages = [25, 28, 30, 32, 35, 38, 40, 42]
    professions = [
        "программист", "менеджер", "бизнесмен", "инженер", 
        "врач", "юрист", "учитель", "предприниматель"
    ]
    
    name = random.choice(names)
    age = random.choice(ages)
    profession = random.choice(professions)
    
    return {
        "name": name,
        "age": age,
        "profession": profession,
        "description": f"{name}, {age} лет, работает {profession}ом"
    }

async def test_full_questionnaire():
    """Тестирует полную анкету из 28 вопросов с рандомными ответами"""
    print("🎲 Генерирую случайные ответы на все 28 вопросов...")
    
    # Генерируем случайные данные
    partner_profile = generate_partner_profile()
    answers = generate_random_answers()
    
    print(f"\n👤 ПРОФИЛЬ ПАРТНЕРА:")
    print(f"Имя: {partner_profile['name']}")
    print(f"Возраст: {partner_profile['age']} лет")
    print(f"Профессия: {partner_profile['profession']}")
    
    print(f"\n📝 СГЕНЕРИРОВАННЫЕ ОТВЕТЫ:")
    print("=" * 80)
    for i, answer in enumerate(answers[:5], 1):  # Показываем первые 5 ответов
        print(f"{i}. {answer['question']}")
        print(f"   Ответ: {answer['answer']}")
        print(f"   Уровень токсичности: {answer['toxicity_level']}/5")
        print()
    
    print(f"... и еще {len(answers)-5} вопросов")
    
    # Подсчитываем общий уровень токсичности
    avg_toxicity = sum(a['toxicity_level'] for a in answers) / len(answers)
    print(f"\n📊 Средний уровень токсичности ответов: {avg_toxicity:.1f}/5")
    
    # Инициализируем AI сервис
    ai_service = AIService()
    
    print(f"\n🤖 Запускаю анализ с {len(answers)} вопросами...")
    start_time = time.time()
    
    try:
        # Анализируем с помощью AI
        result = await ai_service.profile_partner(
            answers=answers,
            user_id=999,
            partner_name=partner_profile['name'],
            partner_description=partner_profile['description'],
            use_cache=False
        )
        
        analysis_time = time.time() - start_time
        
        print(f"✅ Анализ завершен за {analysis_time:.2f} секунд")
        
        # Анализируем результат
        profile_text = result.get('psychological_profile', '')
        word_count = len(profile_text.split())
        char_count = len(profile_text)
        
        print(f"\n📊 РЕЗУЛЬТАТЫ АНАЛИЗА:")
        print(f"Объем: {char_count} символов ({word_count} слов)")
        print(f"Время: {analysis_time:.2f} секунд")
        print(f"Стоимость: ~${result.get('cost_estimate', 0.15)}")
        
        # Показываем начало портрета
        print(f"\n📄 НАЧАЛО ПСИХОЛОГИЧЕСКОГО ПОРТРЕТА:")
        print("=" * 80)
        print(profile_text[:800] + "..." if len(profile_text) > 800 else profile_text)
        print("=" * 80)
        
        # Полный портрет
        print(f"\n📖 ПОЛНЫЙ УНИКАЛЬНЫЙ ПСИХОЛОГИЧЕСКИЙ ПОРТРЕТ:")
        print("=" * 80)
        print(profile_text)
        print("=" * 80)
        
        # Оценка качества
        quality_score = 0
        
        # Объем
        if word_count >= 2000:
            quality_score += 30
            print(f"✅ Объем: ОТЛИЧНО ({word_count} слов)")
        elif word_count >= 1500:
            quality_score += 20
            print(f"🟡 Объем: ХОРОШО ({word_count} слов)")
        else:
            quality_score += 10
            print(f"🔴 Объем: НЕДОСТАТОЧНО ({word_count} слов)")
        
        # Персонализация - проверяем упоминание имени партнера
        if partner_profile['name'] in profile_text:
            quality_score += 20
            print(f"✅ Персонализация: имя {partner_profile['name']} упоминается")
        else:
            print(f"🔴 Персонализация: имя {partner_profile['name']} не найдено")
        
        # Конкретные примеры
        example_names = ['Анна', 'Марина', 'Елена', 'Ольга', 'Светлана', 'Ирина', 'Наталья']
        found_names = sum(1 for name in example_names if name in profile_text)
        if found_names >= 3:
            quality_score += 20
            print(f"✅ Примеры: найдено {found_names} имен")
        else:
            quality_score += 10
            print(f"🟡 Примеры: найдено {found_names} имен")
        
        # Научность
        scientific_terms = ['нарциссизм', 'газлайтинг', 'манипуляция', 'проекция', 'триада']
        found_terms = sum(1 for term in scientific_terms if term.lower() in profile_text.lower())
        if found_terms >= 3:
            quality_score += 20
            print(f"✅ Научность: найдено {found_terms} терминов")
        else:
            quality_score += 10
            print(f"🟡 Научность: найдено {found_terms} терминов")
        
        # Уникальность - проверяем разнообразие контента
        unique_sentences = len(set(profile_text.split('.')))
        if unique_sentences > 50:
            quality_score += 10
            print(f"✅ Уникальность: {unique_sentences} уникальных предложений")
        else:
            print(f"🟡 Уникальность: {unique_sentences} уникальных предложений")
        
        print(f"\n📊 ОБЩАЯ ОЦЕНКА: {quality_score}/100")
        
        if quality_score >= 80:
            print("🎉 ПРЕВОСХОДНО! Уникальный детальный портрет создан!")
        elif quality_score >= 60:
            print("🟡 ХОРОШО! Качественный анализ получен")
        else:
            print("🔴 ТРЕБУЕТ УЛУЧШЕНИЯ")
        
        return result, quality_score
        
    except Exception as e:
        print(f"❌ Ошибка анализа: {e}")
        import traceback
        traceback.print_exc()
        return None, 0

async def main():
    """Главная функция"""
    print("🚀 ТЕСТИРОВАНИЕ ПОЛНОЙ АНКЕТЫ С УНИКАЛЬНЫМ ПОРТРЕТОМ")
    print("=" * 80)
    
    result, score = await test_full_questionnaire()
    
    if result:
        print("\n" + "=" * 80)
        print("🎯 ИТОГИ ТЕСТИРОВАНИЯ")
        print("=" * 80)
        print(f"✅ Система успешно создала уникальный психологический портрет")
        print(f"📊 Оценка качества: {score}/100")
        print(f"🎲 Использованы рандомные ответы на все 28 вопросов")
        print(f"🤖 AI сгенерировал персонализированный анализ")
        
        if score >= 80:
            print("🏆 СИСТЕМА ГОТОВА К ПРОДАКШЕНУ!")
        else:
            print("⚠️ Система работает, но есть место для улучшений")

if __name__ == "__main__":
    asyncio.run(main()) 